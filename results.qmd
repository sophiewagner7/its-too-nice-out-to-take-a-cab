# Results

```{r}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(arrow)
library(scales)
library(RColorBrewer)
library(dplyr)
library(patchwork)
# library(ggridges)
# library(vcd)

# Use like: scale_y_continuous(labels = millions) + 
millions <- function(x) {
  ifelse(x == 0, "0", label_comma(scale = 1e-6, suffix = "M")(x))
}

# Use like: scale_y_continuous(labels = thousands) + 
thousands <- function(x) {
  ifelse(x == 0, "0", label_comma(scale = 1e-3, suffix = "K")(x))
}

# Use in mutate: mutate(foo= standardize(bar))
standardize <- function(x) {
  (x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)
}

base_color <- brewer.pal(n = 3, name = "Set2")[1]
secondary_color <- brewer.pal(n=3, name = "Set2")[2]
classic <- theme_set(theme_minimal())

temp_label <- "Temperature (°C)"

df <- read_parquet("data/complete_weather_and_taxi_data.parquet")
```

```{r}
# Add a month_abbr column.
df <- df |>
  mutate(month_abbr = factor(month.abb[month], levels = month.abb)) 
```


{{< include sections/3/1_dealing_with_the_pandemic.qmd >}}

```{r}
# Filter out pre- and during-Pandemic data.
df <- df |>
  filter(df$date >= as.Date("2021-10-01"))
```
  
## Patterns in Taxi Data - 

### Hourly

### Weekly

### Monthly/Seasonal

- what's our goal here? target rush hour / non-holiday weekdays.

Why talk about monthly? We have to / diligence. 
Also to discard it because we don't have all day.

perh. side thing on just Saturday.

filter df down to just rush hour on non-holiday weekdays.

<!-- ## (3.3) Patterns in weather data? - Moacir -->
## Patterns in Weather Data

{{< include sections/3/3_patterns_in_weather_data.qmd >}}

## Weather vs. Trips.

{{< include sections/3/4_weather_vs_trips.qmd >}}


This is establishing the relationship. Standardize:

( x - min ) / (max - min)

weather: rain y/n , cloud cover categorical , temp numeric

trips: count, cat distance chunks

two variable fights:
  - scatterplot
  - boxplot/cat vs num
  
## Timeshifts

### last week vs. yesterday

Chat piece about doing this weird choice.

### comparing yesterday to today and lastweek to today.

prob for d3. start with r charts though to see wht seems salient.

---

## Patterns across Hours, Days, and Seasons

In order to determine variations in taxi usage, we needed to establish a baseline "normal" in order to verify fluctuations in the data. How can we infer an abberration if we don't know what normal is? How does cab usage regularly fluctate across the week according to work-life patterns, and how does it fluctuate by season?

### When Did the Pandemic “End”?: A Calendar View Approach


As mentioned previously, 
we suspected from our initial charts that cab usage returned to somewhat of a normal around October 2021. 
The calendar view of taxi usage supports that view.

```{r}
#| fig-width: 10
df |> 
  mutate(day = wday(date, label = TRUE), 
         month = month(date, label = TRUE),
         year = year(date),
         day_label = factor(substr(day, 1, 2), 
                      levels = c("Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"))) |> 
  group_by(year, month, day) |>
  summarize(avg_trips = median(trip_count), .groups = 'drop') |> 
  ggplot(aes(x = day, y = month, fill = avg_trips)) +
  geom_tile(color = "white") + 
  scale_fill_gradient(low = "white", high = "red", name = "Avg Trips") +
  labs(
    title = "Average Trips by Day of the Week and Month",
    x = "Day of the Week",
    y = "Month"
  ) +
  theme_minimal() +
  facet_wrap(~year, ncol=6)
```

We can see that in general for 2021, perhaps starting with March, 
the daily and monthly fluctuations were established that have persisted into 2024, 
but from the slightly lighter hue of the 2021 numbers, 
we know that ridership was still establishing its new norms. 
Compare, for example, Fridays and Saturdays in March and April. 
October 2021 appears the first month with a weekly rhythm and total 
numbers in line with future Octobers.


```{r}
#| fig-height: 7
#| fig-width: 7
plot1 <- df |> 
  filter(date < as.Date("2020-03-01")) |> 
  mutate(day=wday(date, label=T),
         month=month(date, label=T),
         year=year(date)) |> 
  group_by(year,month,day) |>
  summarize(avg_trips = median(trip_count), .groups = 'drop') |>
  ggplot(aes(x=as.factor(day), y=as.factor(month), fill=avg_trips)) +
  geom_tile(color="white") +
  scale_fill_gradient(low = "white", high = "red", name = "N trips") +
  labs(title = "Pre-pandemic (Jan 2019 -- Feb 2020)", x = "Day of the week", y = "Month") +
  theme_minimal() +
    theme(plot.title = element_text(size=11),
        legend.key.size = unit(0.5, 'cm'),
        legend.title = element_text(size=10))
  
plot2 <- df |> 
  filter(date >= as.Date("2021-10-01")) |> 
    mutate(day=wday(date, label=T),
         month=month(date, label=T),
         year=year(date)) |> 
  group_by(year,month,day) |>
  summarize(avg_trips = median(trip_count), .groups = 'drop') |> 
  ggplot(aes(x=as.factor(day), y=as.factor(month), fill=avg_trips)) +
  geom_tile(color="white") +
  scale_fill_gradient(low = "white", high = "red", name = "N trips") +
  labs(title = "Post-pandemic (Oct 2021 -- Jul 2024)", x = "Day of the week", y = "Month") +
  theme_minimal() +
  theme(plot.title = element_text(size=11),
        legend.key.size = unit(0.5, 'cm'),
        legend.title = element_text(size=10))

(plot1 / plot2) + plot_annotation(title="Average number of trips by day of the week and month")
```

continue describing months and day of week
add the combined (full time data) plot here as well. This shows that it makes a lot of sense to break off from the pandemic data bc there is such a difference! The sheer volume in ridership obscures pattens 

```{r}
#| fig-height: 7
#| fig-width: 7
plot1 <- df |> 
  filter(date >= as.Date("2021-10-01")) |> 
  mutate(day = wday(date, label = TRUE))|> 
  group_by(day, hour) |>
  summarize(avg_trips = mean(trip_count), .groups = 'drop') |> 
  ggplot(aes(x = day, y = hour, fill = avg_trips)) +
  geom_tile(color = "white") + 
  scale_fill_gradient(low = "white", high = "red", name = "N Trips") +
  labs(
    title = "Pre-pandemic (Jan 2019 - Feb 2020)",
    x = "Day of the Week",
    y = "Hour"
  ) +
  scale_y_continuous(breaks=seq(0,23, by=3))+
  theme_minimal()+
    theme(plot.title = element_text(size=11),
        legend.key.size = unit(0.5, 'cm'),
        legend.title = element_text(size=10))

plot2 <- df |> 
  filter(date < as.Date("2020-03-01")) |> 
  mutate(day = wday(date, label = TRUE))|> 
  group_by(day, hour) |>
  summarize(avg_trips = mean(trip_count), .groups = 'drop') |> 
  ggplot(aes(x = day, y = hour, fill = avg_trips)) +
  geom_tile(color = "white") + 
  scale_fill_gradient(low = "white", high = "red", name = "N Trips") +
  labs(
    title = "Post-pandemic (Oct 2021-Jul 2024)",
    x = "Day of the Week",
    y = "Hour"
  ) +
  scale_y_continuous(breaks=seq(0,23, by=3))+
  theme_minimal()+
    theme(plot.title = element_text(size=11),
        legend.key.size = unit(0.5, 'cm'),
        legend.title = element_text(size=10))

(plot1 / plot2) + plot_annotation(title="Average number of trips by day of the week and hour")
```

describe day of week and hour
-workday consistency
-uptick in usage fri sat night
Realization that it makes sense to compare usage to the week before at the same time since there is relative consistency here -- greater variation bt hours/ diff days of the week
Also, note that its pretty consistent pre-pandemic vs post



