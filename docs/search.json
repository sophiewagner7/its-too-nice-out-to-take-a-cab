[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "‚ÄúIt‚Äôs Too Nice Out to Take a Cab‚Äù: Weather and Taxi Usage in New York, 2019‚Äì2024",
    "section": "",
    "text": "1 Introduction\nDo you ever wonder how weather influences our everyday choices? In a city like New York, even simple behavioral changes can have macro-level ripple effects. This is what we set out to explore‚Äîstarting with taxi data.\nAt first, Moacir was interested in seeing if there is a relationship between ‚Äúunseasonably‚Äù warm weather and New York and drought-like conditions, but Sophie suggested taking it in a different direction: what if we crossed this data with some human behavior, like taxi usage? What might this look like? After a bit of discussion, we landed on a fun hypothesis: people use cabs less often when it is ‚Äúnice‚Äù out in Manhattan ‚Äì they would rather walk than hail an expensive cab.\nProving this turned out to be tricky: what is even is ‚Äúnice‚Äù weather? Does it just mean sunny skies, or does it have a relationship to a temperature threshold? How might relative temperature come into play, such as an unusually warm day after a cold spell, impacting people‚Äôs inclination to walk? And does the effect wear off if there are multiple nice days in a row, as the novelty of walking gives way to taking cabs again? These questions struck us as more amusing and speculative, so we decided to pursue them, instead. Instead of proving the hypothesis, we are using taxi data to see if we can define what ‚Äúnice‚Äù weather is.\nIn short, our project aims to uncover how weather influences small, everyday decisions in urban life. Using taxi data provides a unique lens into how people adapt their transportation preferences due to the weather, serving as a microcosm for understanding human responses to environmental factors. In a city as dynamic as NYC, the answers could be particularly relevant and reveal fascinating insights about how we adapt to our surroundings.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#a-high-level-look-at-weather-and-taxi-trends-can-we-spot-a-pattern-from-here",
    "href": "index.html#a-high-level-look-at-weather-and-taxi-trends-can-we-spot-a-pattern-from-here",
    "title": "‚ÄúIt‚Äôs Too Nice Out to Take a Cab‚Äù: Weather and Taxi Usage in New York, 2019‚Äì2024",
    "section": "1.1 A High-Level Look at Weather and Taxi Trends: Can We Spot a Pattern from Here?",
    "text": "1.1 A High-Level Look at Weather and Taxi Trends: Can We Spot a Pattern from Here?\nLet‚Äôs take a quick peek at the data. Below we have weekly averages for daily taxi rides and temperature from January 2019 to June 2024.\n\n\nCode\ndf &lt;- read_parquet(\"data/complete_weather_and_taxi_data.parquet\")\n\ndf |&gt; \n  group_by(date) |&gt; \n  summarize(\n    total_trips_day = sum(trip_count), .groups = \"drop\",\n    daily_temp = mean(temperature, na.rm = T)\n  )  |&gt; \n  mutate(week_start = floor_date(date, unit = \"week\")) |&gt; \n  group_by(week_start) |&gt; \n  summarize(\n    avg_trips_day = mean(total_trips_day),\n    avg_temp_day = mean(daily_temp), .groups = \"drop\"\n  ) |&gt; \n  pivot_longer(\n    cols=c(avg_trips_day, avg_temp_day), \n    names_to=\"avg_day_metric\", \n    values_to=\"avg_day_value\"\n  ) |&gt;\n  mutate(avg_day_metric=as.factor(avg_day_metric)) |&gt; \n  mutate(avg_day_metric=fct_recode(\n    avg_day_metric, \n    \"Average Daily Trips\"=\"avg_trips_day\", \n    \"Average Weekly Temperature (¬∞C)\"=\"avg_temp_day\")\n  ) |&gt; \n  mutate(avg_day_metric=fct_rev(avg_day_metric))  |&gt; \n  ggplot(aes(x = week_start, y = avg_day_value)) +\n    geom_line(color = base_color, linewidth = 0.7) +\n    facet_wrap(~ avg_day_metric, scales = \"free_y\", ncol=1) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 year\") +\n  scale_y_continuous(labels=double_scale) +\n  labs(title = \"Ridership and temperature trends, Jan 2019 ‚Äì June 2024\",\n       x = \"Date\",\n       y = \"\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16),\n    strip.text = element_text(size = 12, hjust = 0, vjust = 0.5, face=\"bold\"),\n    strip.placement = \"outside\" \n  )\n\n\n\n\n\n\n\n\n\nüöï Considering the taxi data, the most notable observation is the dramatic drop in ridership in March 2020, coinciding with the beginning of the COVID-19 pandemic. While ridership has increased since, it has not nearly returned to pre-pandemic levels, reflecting increased work-from-home and other behavioral shifts. We can also observe seasonal fluctuations; for example, it appears that there are dips and peaks around January of each year, possibly tied to holiday travel patterns, weather, or other behavioral changes.\n‚õÖ Average weekly temperature follows predicted seasonal trends with peaks in the summer and dips in the winter. There may be a subtle trend of slightly higher average temperatures in more recent years, but nothing too definitive. Temperature alone provides a limited slice into what may distinguish a ‚Äúnice day.‚Äù In the next chapter, additional metrics like temperature change and weather categories (e.g.¬†cloud cover, rain) will be explored to refine the relationship between weather and ridership.\nFrom this broad view, it is really hard to see any clear relationship between ridership and weather. This is what makes our project so interesting‚Äìhow can we hammer out the data to unveil micro-patterns? We‚Äôll need to conduct a much more granular analysis to get to the bottom of things.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2¬† Data",
    "section": "",
    "text": "2.1 Description\nWe are basing our analysis on two datasets, a dataset of taxi use in New York and historical weather data. For both datasets, we initally planned to limit our analysis to 2019-02-01 00:00:00 ‚Äì 2024-06-25 23:00:00, in the interest of trying to catch about a year of pre-pandemic norms to help interpret pandemic and post-pandemic use of taxis. As noted in the next chapter, we had to abandon this scope. The inital upper bound reflects the extent of the weather data, and we initially planned on going back to January of 2019. However, no high-volume for-hire vehicle (FHVHV) data are available for January, so we bumped our limit to February, 2019.\nThe taxi data are provided by New York‚Äôs Taxi and Limousine Commission. They provide taxi data, in parquet format, going back to 2009. Since February of 2019, they have also included data on trips serviced by companies like Lyft and Uber, which are classified as ‚Äúhigh-volume for-hire vehicle‚Äù trips. The data are updated monthly, with a two-month lag. Our focus is on yellow taxi and FHVHV trips, because our focus is on intra-Manhattan trips. Only yellow cabs can pick up passengers in most of Manhattan, so we are ignoring green cabs and regular for-hire vehicles (town cars and limousines). Yellow cab data have 19 columns, and FHVHV data have 24 columns. With our Python scripts, we consolidate the data to create aggregated hourly statistics on trip duration and trip distance. We found the transaction data (fare amount and tip amount) noisy with unreliable outliers. It also fell outside of our scope of analysis. We also included time-delta statistics comparing a point in time with the same point in time a week earlier. We did this because taxi data follow weekly patterns.\nThe historical weather data are provided by the Global Historical Climate Network hourly (GHCNh), which provides hourly weather data going back over two centuries for New York City. The data come in annual parquet files for download by station. Our station, KNYC0, is listed in the GHCNh as USW00094728, and it is the weather station in Central Park. The data come in over 200 columns to account for the variability that can occur in the terse METAR report for airplanes, which is also included under remarks. The government provides a codebook to describe the remaining data. As we are interested in what conditions determine a ‚Äúnice‚Äù day for not using a taxi, we aimed to keep a wide array of data, including temperature, precipitation, wind, sky cover, humidity, and so on. We badly wanted to include snow data, but snow has been so infrequent during this window that we folded the snow numbers into the general precipitation numbers.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2¬† Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nThe taxi data are notoriously (as in, persistently) messy, registering trips outside the bounds of the time window and giving results that seem extremely unlikely, like large negative tips or negative trip durations. To counter these anomalies, we are limiting ourselves to trips between one minute and two hours long as well as trips of ten or fewer miles. Similarly, and, when consolidating monthly data to yearly data, we filter out all results from other years. In the aggregate, however, the outliers generally wash out, as we have a record of over 500 million yellow cab and Uber/Lyft rides. Nevertheless, there is one data point where no trips are recorded: 2:00am on March 10, 2019. However, there are data on both sides, so we will interpolate results for this time. Who knows what happened to the taxi system that affected both Uber and yellow taxis. Additionally, the tip amounts for Uber/Lyft are almost certainly incorrect, as over 75% of rides report no tip at all. As such, we will drop the tip and fare amounts from our data to account for this. We had suspected that a higher tip percentage might be related to a nice day, even though we assume taxi usage is lower, but the data are simply unreliable.\nFor weather, we have a large array of missing values, but the remarks column is missing only 36 entries, for a general station uptime of 99.93%. Many of the columns have many more missing values, but that is because the way the weather data work is by reporting a NaN for the absence of data. That said, we have a consecutive period of 24 hours‚Äô worth of missing data across May 31, 2023 to June 1, 2023. This includes missing remarks, suggesting the station was down. In our imagination, a peregrine falcon ate the station.\nThe other 12 missing remarks are scattered across the dataset.\nBecause we have a total of 47,328 points in time in our dataset, it is hard to see any of the missing data in any plot that includes the entire stretch.\n\n\nCode\ndf |&gt;\n  mutate(\n    week_start=lubridate::floor_date(date, unit=\"week\"),\n    week = lubridate::week(date),\n    year = lubridate::year(date)) |&gt;\n  group_by(year, week) |&gt;\n  summarize(n_missing=sum(is.na(temperature))) |&gt;\n  ggplot(aes(x = week, y = year, fill = n_missing)) +\n    geom_tile(color = \"white\") +\n    scale_fill_distiller(palette=\"Greens\", name = \"Missing Count\", direction=1) +\n    scale_x_continuous(breaks = seq(1, 52, by = 4)) + \n    scale_y_continuous(breaks = seq(2019, 2024, by=1))+\n    labs(\n      title = \"Number of Missing Temperature Observations by Date\",\n      x = \"Week of Year\",\n      y = \"Year\"\n    ) +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nAs we can see in this chart, the missing temperature data (our most important metric, we suspect) are mostly centered in that 24-hour period when the station recorded no data. The other gaps are scattered across the data, with a tilt toward the older data. This is why we are confident in simply interpolating data for the missing values. Another option is to derive the temperature from the point in time‚Äôs METAR report, but we suspect the METAR reports for the missing data may be unparseable, in general.\n\n\nCode\nlibrary(redav)\ndf |&gt;\n  select(-c(pres_wx_AU3, snow_depth, pres_wx_AU2, sky_cover_2, wind_direction, sky_cover_3, pres_wx_AU1, wind_gust, juno, via)) |&gt;\n  plot_missing(percent=FALSE, max_rows=10, max_cols=10, num_char=6)\n\n\n\n\n\n\n\n\n\nOur second chart shows the distribution of missing data, from which we can see how infrequently a wind speed is registered and that the rest of the missing data are scattered in small numbers around the dataset, with almost all of the data making up complete cases (minus the above extracted columns).\nIn the end, we shed so much data that the missing data become almost negligible. We combine several different descriptions of sky cover and precipitation to derive two new columns, cloud_cover and precipitation. We add in temperature, and that is about it. For the days when data are missing, we assume clear skies and no precipitation and interpolate the temperature from neighboring values.\nFor details on pre-processing the data, please see:\n\npre_process_taxi_data.ipynb\npre_process_weather_data.ipynb\nconsolidate_data",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3¬† Results",
    "section": "",
    "text": "3.1 A New Normal: How the COVID-19 Pandemic Reshaped Taxi Ridership Patterns\nFrom the outset, we knew that we would need to exclude data from the height of Pandemic-era restrictions, as this would likely cloud (no pun intended) relationships between weather and taxi usage. Our intial plan was to contain data from 2019 (pre-Pandemic) to get a baseline to establish normalcy of post-pandemic data. However, we found significant differences in rider behavior between pre- and post-Pandemic periods, forcing us to question the relevance of using pre-Pandemic data at all.\nCode\nfill_colors &lt;-brewer.pal(n = 5, name = \"Set2\")\ndf |&gt;\n  mutate(year_month = lubridate::ymd(paste(year, month, \"01\", sep = \"-\"))) |&gt;\n  pivot_longer(cols=c(\n    \"juno\", \"lyft\", \"uber\", \"via\", \"yellow\"\n    ), names_to=\"car_company\", values_to=\"car_company_trips\")  |&gt;\n  mutate(car_company = factor(car_company, levels = c(\"juno\", \"via\", \"lyft\", \"uber\", \"yellow\"))) |&gt;\n  group_by(year_month, car_company) |&gt;\n  summarize(trips_per_month = sum(car_company_trips), .groups = \"drop\") |&gt;\n  ggplot(aes(\n    x=year_month, \n    y=trips_per_month, \n    fill=car_company\n    )) +\n    geom_bar(stat = \"identity\", position = \"stack\") +\n      labs(\n    title = \"Trips per Month by Hired Car Company/Type\",\n    x = \"Month\",\n    y = \"Total Trips\",\n    fill = \"Hired Car Company/Type\"\n  ) +\n  scale_fill_manual(\n    values = fill_colors,\n    labels = c(\"Juno\", \"Via\", \"Lyft\",\"Uber\",\"Yellow Cab\")\n  ) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"3 months\") +\n  scale_y_continuous(labels = millions) + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"bottom\")\nWe first looked at trip volume by car type. We knew there was going to be an impact at the height of the Pandemic, but the plot is still striking. We can see when the Pandemic hit in March, 2020. New York City schools closed on March 16, as cases went from a seven-day average of 0 per 100,000 inhabitants at the start of March to an initial peak of about 60 at the end of the month.[1] [2] The uncertainty over this initial wave halved the March ridership totals in comparison to February.\nRidership slowly increased from thereon. We can see that two of the FHVHV companies, though only holding small portions of the market, disappeared from the picture. Juno shut down operations in November 2019, with drivers being offered to join Lyft.[3] Via also stopped its ride-sharing operations in December 2021.[4] The cessation of rides from these two companies only lead us toward the most striking aspect of hired car and taxi usage in Manhattan. Not only did usage fall during the pandemic, but we seem to be in a new normal, averaging about 7.5 million rides a month across yellow cabs, Lyft, and Uber. These numbers have held since October 2021, suggesting it may make sense to abandon all data from before this time in order to get a good rhythm of usage.\nCode\nfirst_color &lt;- brewer.pal(8, \"Set2\")[1]\n\ndf |&gt;\n  mutate(year_month = as.Date(format(date, \"%Y-%m-01\"))) |&gt;\n  group_by(year_month) |&gt;\n  summarize(\n    monthly_trips = sum(trip_count),\n    monthly_half_mile = sum(half_mile_trips),\n    monthly_one_mile = sum(one_mile_trips),\n    monthly_two_mile = sum(two_mile_trips),\n    monthly_three_mile = sum(three_mile_trips),\n    monthly_five_mile = sum(five_mile_trips),\n    monthly_more_than_five = monthly_trips - monthly_half_mile - monthly_one_mile - monthly_two_mile - monthly_three_mile - monthly_five_mile,\n    pct_half_mile = monthly_half_mile / monthly_trips,\n    pct_one_mile = monthly_one_mile / monthly_trips,\n    pct_two_mile = monthly_two_mile / monthly_trips,\n    pct_three_mile = monthly_three_mile / monthly_trips,\n    pct_five_mile = monthly_five_mile / monthly_trips,\n    pct_more_than_five = monthly_more_than_five / monthly_trips,\n    .groups = \"drop\"\n  ) |&gt;\n  pivot_longer(\n    cols = c(\n    \"pct_half_mile\",\n    \"pct_one_mile\",\n    \"pct_two_mile\",\n    \"pct_three_mile\",\n    \"pct_five_mile\",\n    \"pct_more_than_five\",\n    ),\n    names_to = \"pct_trip_distance_group\",\n    values_to = \"pct_trip_distance_count\"\n  ) |&gt;\n  mutate(pct_trip_distance_group = factor(\n    pct_trip_distance_group, levels = c(\n      \"pct_half_mile\",\n      \"pct_one_mile\",\n      \"pct_two_mile\",\n      \"pct_three_mile\",\n      \"pct_five_mile\",\n      \"pct_more_than_five\"\n    ))) |&gt;\n  ggplot(aes(\n    x=year_month,\n    y= pct_trip_distance_count,\n    fill = pct_trip_distance_group\n    )) +\n    geom_bar(stat=\"identity\", position=\"stack\") +\n    labs(\n      title = \"Distribution of Taxi and Uber/Lyft Trip Distances under Ten Miles in Manhattan\",\n      x = \"Month\",\n      y = \"Percentage of Trips\",\n      fill = \"Trip Distance\"\n  ) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"3 months\") +\n  scale_fill_brewer(\n    palette = \"GnBu\",\n    labels = c(\n      \"pct_more_than_five\" = \"Five to Ten Miles\",\n      \"pct_five_mile\" = \"Three to Five Miles\",\n      \"pct_three_mile\" = \"Two to Three Miles\",\n      \"pct_two_mile\" = \"One to Two Miles\",\n      \"pct_one_mile\" = \"Half Mile to One Miles\",\n      \"pct_half_mile\" = \"Under Half a Mile\"\n    )\n  ) +\n  scale_y_continuous(labels = label_percent()) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"bottom\")\nThe next question we asked to establish a baseline normal was rider travel distance. If number of riders fell overall, did this come equally across all distances, or are people taking less of certain types of trips?\nPlotting the distribution of trip distances helped to answer this question. Perhaps as a consequence of less business-related travel because of flexible work schedules, the trips we observed tended to be longer. Shorter trips‚Äìthose of one mile‚Äìmake up a smaller percentage of the total, while trips of more than three miles make up a larger percentage of the total since the onset of the Pandemic.\nBoth analyses suggest certainly abandoning pre-Pandemic data as well as all of the 2020 data. While the distribution of distances stabilizes at the beginning of 2021, the number of trips does not reach its new normal until around October 2021, suggesting that is the true step into the post-Pandemic order.\nGiven these insights, we will focus only on data from October 2021 onward as we move forward with our analysis.\nCode\n# Filter out pre- and during-Pandemic data.\ndf &lt;- df |&gt;\n  filter(df$date &gt;= as.Date(\"2021-10-01\"))",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#patterns-in-taxi-data",
    "href": "results.html#patterns-in-taxi-data",
    "title": "3¬† Results",
    "section": "3.2 Patterns in Taxi Data",
    "text": "3.2 Patterns in Taxi Data\n\n\nCode\n# Pivot by trip distance bin.\npivot_trip_distance_df &lt;- df |&gt;\n  mutate(\n    temperature = round(temperature)\n  ) |&gt;\n  mutate(\n    up_to_ten_mile_trips = trip_count - rowSums(across(ends_with(\"mile_trips\")))\n  ) |&gt;\n  pivot_longer(\n    cols=c(ends_with(\"mile_trips\")),\n    names_to=\"trip_type\",\n    values_to=\"trip_type_count\",\n  ) |&gt;\n  mutate(trip_type = factor(trip_type, \n    levels = c(\n      \"half_mile_trips\", \n      \"one_mile_trips\", \n      \"two_mile_trips\", \n      \"three_mile_trips\", \n      \"five_mile_trips\", \n      \"up_to_ten_mile_trips\"\n      ),\n    labels = c(\n      \"Up to Half-Mile Trips\",\n      \"Up to One-Mile Trips\",\n      \"Up to Two-Mile Trips\",\n      \"Up to Three-Mile Trips\",\n      \"Up to Five-Mile Trips\",\n      \"Up to Ten-Mile Trips\"\n    ),\n    ordered = TRUE)) \n\n\nThe goal of our analysis is to see trends in rider usage in relationship with changes in the weather. In order to make claims about these relationships, we need to limit other components that may influence taxi ridership. Therefore, we explored variations in taxi usage based on hour of the day, day of the week, and month of the year. For instance, comparing ridership at 3 AM on a Wednesday to 5 PM on a Thursday would be misleading since baseline usage at these times differs inherently. Establishing a consistent baseline for ‚Äúnormal‚Äù taxi ridership allows for more meaningful comparisons and insights. But to establish a baseline, we also just need to see what the patterns even are in the data. In the following section we look at hourly, day of the week, and monthly/seasonal trends.\n\n3.2.1 Ridership by the Clock: When Are We Hailing Taxis, And Where Are We Going?\nAn interesting result of our analysis is that trip distance did not appear to have any relationship with day of the week or month of the year. However, it did have some variation by time of day.\n\n\nCode\ndf |&gt;\n  group_by(hour) |&gt;\n  summarize(\n    monthly_trips = sum(trip_count),\n    monthly_half_mile = sum(half_mile_trips),\n    monthly_one_mile = sum(one_mile_trips),\n    monthly_two_mile = sum(two_mile_trips),\n    monthly_three_mile = sum(three_mile_trips),\n    monthly_five_mile = sum(five_mile_trips),\n    monthly_more_than_five = monthly_trips - monthly_half_mile - monthly_one_mile - monthly_two_mile - monthly_three_mile - monthly_five_mile,\n    pct_half_mile = monthly_half_mile / monthly_trips,\n    pct_one_mile = monthly_one_mile / monthly_trips,\n    pct_two_mile = monthly_two_mile / monthly_trips,\n    pct_three_mile = monthly_three_mile / monthly_trips,\n    pct_five_mile = monthly_five_mile / monthly_trips,\n    pct_more_than_five = monthly_more_than_five / monthly_trips,\n    .groups = \"drop\"\n  ) |&gt;\n  pivot_longer(\n    cols = c(\n    \"pct_half_mile\",\n    \"pct_one_mile\",\n    \"pct_two_mile\",\n    \"pct_three_mile\",\n    \"pct_five_mile\",\n    \"pct_more_than_five\",\n    ),\n    names_to = \"pct_trip_distance_group\",\n    values_to = \"pct_trip_distance_count\"\n  ) |&gt;\n  mutate(pct_trip_distance_group = factor(\n    pct_trip_distance_group, levels = c(\n      \"pct_half_mile\",\n      \"pct_one_mile\",\n      \"pct_two_mile\",\n      \"pct_three_mile\",\n      \"pct_five_mile\",\n      \"pct_more_than_five\"\n    ))) |&gt;\n  ggplot(aes(\n    x=hour,\n    y= pct_trip_distance_count,\n    fill = pct_trip_distance_group\n    )) +\n    geom_bar(stat=\"identity\", position=\"stack\") +\n    labs(\n      title = \"Distribution of Taxi and Uber/Lyft Trip Distances under Ten Miles \\nby Hour of Day\",\n      x = \"Hour\",\n      y = \"Percentage of Trips\",\n      fill = \"Trip Distance\"\n  ) +\n  scale_fill_brewer(\n    palette = \"GnBu\",\n    labels = c(\n      \"pct_more_than_five\" = \"Five to Ten Miles\",\n      \"pct_five_mile\" = \"Three to Five Miles\",\n      \"pct_three_mile\" = \"Two to Three Miles\",\n      \"pct_two_mile\" = \"One to Two Miles\",\n      \"pct_one_mile\" = \"Half Mile to One Miles\",\n      \"pct_half_mile\" = \"Under Half a Mile\"\n    )\n  ) +\n  scale_y_continuous(labels = label_percent()) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\nRider behavior does seem to be influenced by time of day. From the plot above we can see that longer trups are more common during the late-night and early-morning hours. Perhaps this indicates that people travel greater distances for late-night activities. The distribution of trip distances appears to stabilize between 7am and 7pm, with higher proportion of shorter-distance trips compared to long. Interestingly, time of day was the only time-measure that seemed to impact this aspect of rider behavior: day of the week and month do not appear to have any influence on trip distance. This information isn‚Äôt totally revolutionary, though it may underscore the importance of focusing on particular hours to account for variability in trip length or usage patterns.\nWith respect to trip volume, there is a significant variation by time of day as anticipated. When plotting all dates, we noticed some clustering in trip counts by hour, and were able to decipher that this behavior is largely related to the day of the week.\n\n\nCode\ntemp_df &lt;- df |&gt; \n  mutate(\n    day = weekdays(date), \n    is_weekend = factor(ifelse(day %in% c(\"Saturday\", \"Sunday\"), \"Weekend\", \"Weekday\"),\n                        levels = c(\"Weekend\", \"Weekday\")),\n    day = factor(day, levels = c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")) \n  ) |&gt; \n  group_by(day, hour, is_weekend) |&gt; \n  summarize(mean_trip_count = mean(trip_count, na.rm = TRUE), .groups = \"drop\")\ntemp_df |&gt; \n  ggplot(aes(x = hour, y = mean_trip_count, group = day, color = is_weekend)) +\n  geom_line(linewidth = 1) +\n  geom_text_repel(\n    data = temp_df|&gt; filter(hour == max(hour)), \n    aes(label = day),\n    nudge_x = 1,\n    size = 3,\n    fontface=\"bold\"\n  ) +\n  scale_color_manual(\n    values = c(\"Weekend\" = base_color, \"Weekday\" = secondary_color),\n    labels = c(\"Weekend\", \"Weekday\"),\n    name = \"Day Type\"\n  ) +\n  scale_x_continuous(breaks = seq(0, 23, by = 3)) +\n  scale_y_continuous(labels=thousands) +\n  labs(\n    title = \"Trip Counts by Hour with Day of Week Labels\",\n    x = \"Hour of the Day\",\n    y = \"Average Trip Count\",\n    color = \"Day Type\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\nAfter identifying clusters in ridership patterns, we were able to delineate that a major source of variation in rider usage of hours of the day came from if it was a weekday or weekend. It appears that weekdays follow a somewhat similar trend by hour, with weekends exhibiting more unique trends. Saturday and Sunday show similar ridership in the morning (relatively high, carryover ridership from people going out late the previous night). However, Sunday has noticeably lower ridership in the evening; logically this makes sense as people are likely not engaging in as much nighttime activity before the workweek begins again. Because these patterns are distinct from one another and differ from the work-week trends, it will likely be better to stick to weekdays moving forward where the pattern is more consistent.\nLooking at weekdays,we notice strong bimodality during rush hour periods (7am-9am, 5pm-7pm). Perhaps we should limit our focus to just rush hour during working days to limit some variability or influence of time on taxi usage. Logically we might frame it as taking a taxi to and from work, but if its a nice day, I might decide to walk home from the office. If it‚Äôs below freezing, I am not going to go out of my way to walk 40 minutes home, though!\nMoving forward, we‚Äôll restrict the analysis to non-holiday weekday rush hour periods (7-9 AM and 5-7 PM) to reduce variability and emphasize patterns tied to commuting behavior.\n\n\nCode\n# Filtering to working days and rush hour only\nall_dates &lt;- seq.Date(as.Date(\"2021-10-01\"), as.Date(\"2024-12-31\"), by = \"day\")\nus_holidays &lt;- as.Date(holidayNYSE(c(2021:2024)))\n\nget_columbus_day &lt;- function(year) {\n  october_dates &lt;- seq.Date(as.Date(paste(year, \"10-01\", sep = \"-\")), as.Date(paste(year, \"10-31\", sep = \"-\")), by = \"day\")\n  mondays &lt;- october_dates[weekdays(october_dates) == \"Monday\"]\n  mondays[2]\n}\nget_black_friday &lt;- function(year) {\n  november_dates &lt;- seq.Date(as.Date(paste(year, \"11-01\", sep = \"-\")), as.Date(paste(year, \"11-30\", sep = \"-\")), by = \"day\")\n  thursdays &lt;- november_dates[weekdays(november_dates) == \"Thursday\"]\n  thanksgiving &lt;- thursdays[4] \n  thanksgiving + 1 \n}\nchristmaseve_to_new_years &lt;- as.Date(unlist(lapply(2021:2024, function(year) {\n  seq.Date(as.Date(paste(year, \"12-24\", sep = \"-\")), as.Date(paste(year, \"12-31\", sep = \"-\")), by = \"day\")\n})))\n\ncolumbus_days &lt;- as.Date(sapply(2021:2024, get_columbus_day))\nblack_fridays &lt;- as.Date(sapply(2021:2024, get_black_friday))\n\nworking_days &lt;- all_dates[\n  !weekdays(all_dates) %in% c(\"Saturday\", \"Sunday\") & \n  !(all_dates %in% us_holidays) & \n  !(all_dates %in% columbus_days) & \n  !(all_dates %in% black_fridays) & \n  !(all_dates %in% christmaseve_to_new_years) & \n  (format(as.Date(all_dates), \"%m-%d\") != \"11-11\")\n]\n\ndf$working_day &lt;- ifelse(df$date %in% working_days, T, F)\ndf$rush_hour &lt;- ifelse(df$working_day==T & df$hour %in% c(7,8,9,17,18,19), T, F)\ndf &lt;- df |&gt; filter(rush_hour==T)\n\n\n\n\n3.2.2 Rush Hour Routines: Patterns Across Days and Seasons\nNow that we are focused only on rush hour times, let‚Äôs take a look at any other day of the week and seasonal patterns.\n\n\nCode\ndf &lt;- df |&gt; mutate(\n rush_hour_group = case_when(\n    hour %in% c(7, 8, 9) ~ \"Morning rush hour (7-9am)\",\n    hour %in% c(17, 18, 19) ~ \"Evening rush hour (5-7pm)\",\n    .default = \"Overall\"\n  ) |&gt; \n  factor(levels = c(\"Overall\", \"Morning rush hour (7-9am)\", \"Evening rush hour (5-7pm)\"), ordered = TRUE)\n)\ndf |&gt;\n  mutate(day = factor(wday(date, label = TRUE, abbr = TRUE), levels = c(\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"))) |&gt;\n  ggplot(aes(x = day, y = trip_count, fill=rush_hour_group)) +\n  geom_boxplot(color = \"black\", outlier.color = \"black\", outlier.size = 1) +\n  scale_y_continuous(label=thousands)+\n  scale_fill_manual(values = c(\"Overall\" = base_color, \n                               \"Morning rush hour (7-9am)\" = secondary_color, \n                               \"Evening rush hour (5-7pm)\" = brewer.pal(n = 8, name = \"Set2\")[3])) +\n  labs(title = \"Number of trips by day of the week\", x = \"Day of week\", y = \"Number of trips\", fill=\"\") +\n  theme_minimal() +\n  theme(legend.position=\"bottom\")\n\n\n\n\n\n\n\n\n\nEven within the weekday rush hour subset, ridership varies. We see that Mondays have the lowest median trip counts and the most compact IQR, which could be related to Monday as a common WFH day (explaining lower average) and people tend to be consistent in their behavior at the start of the week (less variability). Tuesday through Thursday, we see a pretty consistent median and variabilty. Friday, we see the highest variability, likely because people engage in social activities after work. Tuesday through Thursday show relatively consistent median trip counts and narrower distributions, reflecting more regular commuting patterns. There are some outliers visible on the plot worth investigating, perhaps relating to around-holiday times, special events, or weather conditions.\n\n\nCode\ndf |&gt; \n  ggplot(aes(x = month_abbr, y = trip_count)) +\n  geom_boxplot(fill=base_color, color = \"black\", outlier.color = \"black\", outlier.size = 1) +\n  scale_y_continuous(label=thousands)+\n  labs(title = \"Number of trips by month\", x = \"Month\", y = \"Number of trips\") +\n  theme_minimal() \n\n\n\n\n\n\n\n\n\nLooking at the trend by month, we can see some seasonality. July and August have the lowest median trip counts and tighter distributions. From this we may be able to infer that there is reduced ridership during summer months, perhaps due to vacations, lighter commuting schedules, or more people deciding not to take a cab if it is nice out! January shows another low median, maybe indicating continued end-of-year holidays and vacations. February through June is fairly consistent in terms of median and IQR.\nEven within rush hour periods, external factors like days of the week and time of year still appear to have some influence on ridership. This is important to note because it will impact how we assess changes in ridership due to weather conditions later on.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#patterns-in-weather-data",
    "href": "results.html#patterns-in-weather-data",
    "title": "3¬† Results",
    "section": "3.3 Patterns in Weather Data",
    "text": "3.3 Patterns in Weather Data\n\nWe chose to limit our weather analysis to three variables: temperature, cloud cover, and rain. This provides three kinds of variables (numeric, categorical, boolean) while also giving a sense of easy to understand information that might be used by a traveler electing to walk or not. That is, a consideration of whether it is sunny or not is perhaps clearer to a person choosing to ride the cab than the dew point.\n\n\nCode\ndf |&gt; \n  ggplot(aes(x = month_abbr, y = temperature)) +\n    geom_boxplot(fill=base_color) +\n    labs(\n      title = \"Temperature Distribution\",\n      x = \"Month\",\n      y = temp_label\n    ) \n\n\n\n\n\n\n\n\n\nAs noted earlier, the temperature fluctuates as we would expect. What struck us in these boxplots is how the outliers are distributed, particularly in March, April, and May, which can run hot. This is a fantastic opportunity for seasonal analysis in limiting our investigation, but we have already trimmed our data down so much. Preparing for a specific springtime analysis would require reconsidering how we collect and pre-process our data.\nAnother point of analysis, however, is to note that everything below -10¬∞ or above 30¬∞ or so seems to be an outlier. If we consider the distribution all temperatures, we can see that those tails are small and long and might affect the analysis we do moving forward.\n\n\nCode\ndf |&gt;\n  ggplot(aes(temperature)) +\n  geom_histogram(color=\"white\", fill=base_color) +\n  scale_y_continuous(labels=thousands) +\n  labs(\n    title = \"Distribution of Integral Temperatures\", x = \"Temperature (¬∞C)\", y = \"Count\")\n\n\n\n\n\n\n\n\n\nMoving forward, we will limit our analysis to temperatures between -5¬∞ and 30¬∞.\n\n\nCode\ndf &lt;- df |&gt;\n  filter(temperature &gt;= -5) |&gt;\n  filter(temperature &lt;= 30)\n\n\nCloud cover is measured in ‚Äúoktas,‚Äù which we have converted to an ordinal categorical variable, that turns ‚Äúless cloudy‚Äù into a positive measure when comparing two different weather reports.\n\n\n\nValue\nDescription\n\n\n\n\n0\nClear\n\n\n-1\nFew clouds\n\n\n-2\nScattered clouds\n\n\n-3\nBroken clouds\n\n\n-4\nOvercast\n\n\n\n\n\nCode\ndf |&gt;\n  group_by(month_abbr, cloud_cover) |&gt;\n  tally() |&gt;\n  group_by(month_abbr) |&gt;\n  mutate(percentage = n / sum(n) * 100) |&gt;\n  ungroup() |&gt;\nggplot(aes(x = month_abbr, y = percentage, fill = as.factor(cloud_cover))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(\n    title = \"Percentage of Cloud Cover by Month\",\n    x = \"Month\",\n    y = \"Percentage\",\n    fill = \"Cloud Cover\"\n  ) +\n  scale_fill_brewer(\n    palette = \"GnBu\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nCloud cover less obviously seasonal than temperature, and in general days are clear. The lack of clear seasonality helps us generalize over the year, and the trend toward clear days may help cloudiness jump out more as an excuse to take a cab instead of walk.\n\n\nCode\ndf |&gt;\n  group_by(date = as.Date(date)) |&gt;\n  summarize(\n    rain_day = any(rain == TRUE),\n    across(c(year, month_abbr), ~ first(.))\n  ) |&gt;\n  group_by(year, month_abbr) |&gt;\n  summarize(\n    rainy_days = sum(rain_day), .groups = \"drop\",\n  ) |&gt;\n  group_by(month_abbr) |&gt;\n  summarize(avg_rainy_days = mean(rainy_days)) |&gt;\n  ggplot(aes(x = month_abbr, y = avg_rainy_days)) +\n  geom_bar(stat = \"identity\", fill = base_color) +\n  labs(\n    title = \"Average Number of Days with at Least Trace Amounts of Rain\",\n    x = \"Month\",\n    y = \"Average Rainy Days\"\n  )\n\n\n\n\n\n\n\n\n\nIn limiting our data just to rush hours, the amount of rain we capture has also been greatly diminished. Where earlier we were averaging about 15 days a month of rain, a lot of that rain fell outside of rush hour, meaning the distribution changes remarkably. This will actually help in later analysis because, like we cloud cover, it makes rain rarer and perhaps a more notable indicator of taxi usage.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#weather-vs.-trips-can-we-define-nice-weather-from-ridership-patterns",
    "href": "results.html#weather-vs.-trips-can-we-define-nice-weather-from-ridership-patterns",
    "title": "3¬† Results",
    "section": "3.4 Weather vs.¬†Trips: Can We Define ‚ÄúNice‚Äù Weather from Ridership Patterns?",
    "text": "3.4 Weather vs.¬†Trips: Can We Define ‚ÄúNice‚Äù Weather from Ridership Patterns?\nNow that we have looked at initial patterns in ridership and weather separately, let‚Äôs put them together and see if we can make any initial interpretations regarding how weather might impact rider behavior. We have two variables to assess ridership (trip_count and its various distance bands) and the three weather variables, (temperature, cloud_cover, and rain).\n\n\nCode\ndf |&gt;\n  mutate(temperature = round(temperature)) |&gt;\n  group_by(temperature) |&gt;\n  summarize(avg_trips_by_degree=mean(trip_count), .groups = \"drop\") |&gt;\n  ggplot(aes(x = temperature, y = avg_trips_by_degree)) +\n  geom_point(alpha = 0.9, color = base_color) +\n  geom_smooth(method = \"loess\", se = T, color = secondary_color, alpha=0.15, span=0.75) +\n  scale_y_continuous(labels = thousands, breaks = pretty_breaks(n = 3), limits=c(10000,20000)) +\n  labs(\n    title = \"Hourly Trip Count by Integral Temperature\", \n    x = \"Temperature (¬∞C)\", \n    y = \"Hourly Trip Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nLooking at average trip count at different temperatures, we can point out some obvious things. The data is a lot more sparse at extreme temperatures, so even taking the average per integer temperature, we get some weird values and higher variability. This is particularly true on the cold side. Hourly ridership seems to kind of stabilize in the middle temperatures. We see a slight increase in ridership at the high extremes, particularly above 30¬∞C, suggesting that people may prefer to take a cab instead of walk home on extremely hot days. Additionally, we see a subtle dip at 20¬∞C, suggesting that is a great time for walking‚Äì it is neither too hot, nor too cold. These could be our first indications of what we may consider to be a ‚Äúnice‚Äù day.\n\n\nCode\nggplot(df, aes(x = cloud_cover, y = trip_count, fill=cloud_cover)) +\n  geom_point(position=\"jitter\", alpha=0.5, color=\"lightgrey\") +\n  geom_boxplot(alpha=0.7, outlier.alpha=1, color=\"black\", outlier.color=\"black\", linewidth=0.55) +\n  scale_fill_brewer(palette = \"GnBu\") +\n  scale_y_continuous(labels=thousands, breaks = pretty_breaks(n = 3)) +\n  labs(title = \"Distribution of trip counts by cloud cover\", x = \"Cloud Cover\", y = \"Trip Count\", fill=\"Cloud Cover\") +\n  theme_minimal() +\n  theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())\n\n\n\n\n\n\n\n\n\nTrends in ridership according to cloud cover are a bit difficult to parse out. The vast majority of days fall into either clear or overcast categories, and their values are quite similar. Variations in the intermediate categories could likely be driven by the smaller sample size, rather than any meaningful difference in rider behavior.\n\n3.4.1 Just another rainy day\nComing into this analysis, I speculated that rain might be a driving factor in ridership patterns. Going to work, the desire to arrive at work looking presentable, instead of with soaked clothes or damaged belongings, might lead people to opt for more comfortable transportation. Sometimes even the trek to the subway is too much! The same could be true of the evening, however, if you have after-work drinks and want to look nice, or again ur belongings. sometimes you want to look presentable for a meeting instead of walking, biking, or sometimes even just trekking to a subway.\nOn the other hand, if it is after work and it is beautiful out, I might take the time to walk the 3 miles home. And while I am a person who loves going on a walk or run in the rain, I have to be in the right mood for it. If I am coming home from a stressful day at work, getting soaked in rain might set me over the edge. Sometimes your comfort is worth the expense! Both of these might lead to a greater difference in activity on raining vs non raining days.\nSetting out to answer these questions, I first compared the distribution of trips per hour by rain status. Because rain is relatively infrequent during the specific rush hour periods to which we have subset our data, I decided to scale the distributions to density to get a fair comparison. I also broke it up into temperature groups to eliminate the issue of it raining more often at particular temperatures.\n\n\nCode\ndf |&gt; mutate(\n  rain=as.factor(ifelse(precipitation!=0, \"Raining\", \"Not raining\"))) |&gt; \n  ggplot(aes(x = trip_count, fill = rain)) +\n  geom_density(alpha = 0.7) +\n  scale_fill_manual(values = c(\"Not raining\" = \"grey\", \"Raining\" = rain_color)) +\n  scale_x_continuous(labels=thousands)+\n  labs(title = \"Density of trip count by rain status\", x = \"Number of trips in an hour\", y = \"Density\", fill = \"Rain Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThe plot above may suggest that there is slightly greater ridership when it is raining. While the density curves largely overlap, suggesting some but not a substantial impact of rain on trip distribution, there are some things to take note of. First, the distribution of number of trips for raining days (blue) appears to be slightly shifted right towards higher trip counts. This could indicate a slight increase in trip demand during rainy periods. Moreover, we see more extreme trip counts in the raining distribution: the tail is slightly longer on the right side. More extreme trip counts might imply that often unusually high demand occurs on days that it rains.\nPerhaps include: NOPE Next, I was curious again about patterns in morning versus evening ridership. Do people have more rigid routines in the morning compared to the evening? Or are they more likely to take a cab in the morning if it is raining because they are worried about their appearance at work?\nFrom the boxplots, we can see the evening rush hour has a slightly higher median AND IQR when it is raining compared to times it does not rain. This suggests that people are perhaps more flexible in the evening. I might not be planning to walk to work on any given day, but in the summer when it is nice out sometimes I spontaneously walk home from work instead of my usual transportation. On the way to work though, people will hunker down and continue their schedule. Potentially illuminates that people are slightly more rigid in morning routines compared to evening routines. Why would I pay a lot of money to get to my place of work (vom emoji) after all?\n\nNow that we have refocused our attention to a smaller subset of the data, we can look at some initial relationships between the two central taxi variables (trip_count and its various distance bands) and the three weather variables, (temperature, cloud_cover, and rain).\n\n\nCode\npivot_trip_distance_df &lt;- df |&gt;\n  mutate(\n    up_to_ten_mile_trips = trip_count - rowSums(across(ends_with(\"mile_trips\")))\n  ) |&gt;\n  pivot_longer(\n    cols=c(ends_with(\"mile_trips\")),\n    names_to=\"trip_type\",\n    values_to=\"trip_type_count\",\n  ) |&gt;\n  mutate(trip_type = factor(trip_type, \n    levels = c(\n      \"half_mile_trips\", \n      \"one_mile_trips\", \n      \"two_mile_trips\", \n      \"three_mile_trips\", \n      \"five_mile_trips\", \n      \"up_to_ten_mile_trips\"\n      ),\n    labels = c(\n      \"Up to Half-Mile Trips\",\n      \"Up to One-Mile Trips\",\n      \"Up to Two-Mile Trips\",\n      \"Up to Three-Mile Trips\",\n      \"Up to Five-Mile Trips\",\n      \"Up to Ten-Mile Trips\"\n    ),\n    ordered = TRUE)\n  ) \n\npivot_trip_distance_df |&gt;\n  group_by(trip_type, temperature) |&gt;\n  summarize(\n    avg_trips_by_degree=mean(trip_type_count),\n    .groups = \"drop\"\n  ) |&gt;\n  ggplot(aes(temperature, avg_trips_by_degree)) +\n    geom_point(color=base_color, size=1, alpha=0.5) +\n    scale_y_continuous(\n      labels = thousands,\n      breaks = pretty_breaks(n = 3)\n    ) +\n    geom_smooth(color=secondary_color, method=\"loess\", linewidth=1, se=TRUE, alpha=0.15)+\n    labs(\n      title = \"Average Hourly Trips Per Hour by Temperature across Trip Distance\",\n      y = \"Average Hourly Trips\",\n      x = temp_label,\n      fill = \"Count\"\n    ) +\n  facet_wrap(~ trip_type, ncol = 3, nrow = 2, scales=\"free_y\")\n\n\n\n\n\n\n\n\n\nIn retrospect, our distance bins may have been a bit optimistic, as no matter how nice it is, there is probably not much of a difference between a five-mile and ten-mile trip if you would rather walk. But on the shorter trips, where the choice between taxi and walk might be more salient, especially during rush hour,\n\n\nCode\npivot_trip_distance_df |&gt;\n  group_by(trip_type, cloud_cover) |&gt; \n  summarize(\n    avg_trips = mean(trip_type_count, na.rm = TRUE),\n    se = sd(trip_type_count, na.rm = TRUE) / sqrt(n()),\n    .groups = \"drop\"\n  ) |&gt;\n  ggplot(aes(x = cloud_cover, y = avg_trips, fill = cloud_cover)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~trip_type, scales = \"free_y\") +\n  scale_y_continuous(label=comma)+\n  scale_fill_brewer(palette = \"GnBu\") +\n  labs(\n    title = \"Average Hourly Trips by Cloud Cover and Trip Distance\",\n    x = \"Cloud Cover\",\n    y = \"Average Hourly Trips\",\n    fill = \"Cloud Cover\"\n  )+\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"bottom\" \n ) \n\n\n\n\n\n\n\n\n\n\n\nCode\npivot_trip_distance_df |&gt;\n  group_by(trip_type, rain) |&gt; \n  summarize(\n    avg_trips = mean(trip_type_count, na.rm = TRUE),\n    se = sd(trip_type_count, na.rm = TRUE) / sqrt(n()),\n    .groups = \"drop\"\n  ) |&gt;\n  ggplot(aes(x = rain, y = avg_trips, fill = rain)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  # geom_errorbar(aes(ymin = avg_trips - se, ymax = avg_trips + se),\n  #               width = 0.2, position = position_dodge(0.9)) +\n  scale_y_continuous(labels=comma)+\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(\n    title = \"Average Hourly Trips by Rain and Trip Distance\",\n    x = \"Rain\",\n    y = \"Average Hourly Trips\",\n    fill = \"Rain\"\n  )+\n  facet_wrap(~trip_type, scales = \"free_y\") +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"bottom\" \n )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#doing-the-timeshift",
    "href": "results.html#doing-the-timeshift",
    "title": "3¬† Results",
    "section": "3.5 Doing the Timeshift",
    "text": "3.5 Doing the Timeshift\n\nWith these provocative initial conclusions, we decided to move forward to see if we could relativize the concept of ‚Äúnice.‚Äù The issue here became so perceptual, however, we are not certain we solved a way out of it. After all, ‚Äúit‚Äôs too nice out to take a cab‚Äù implicitly invokes a rather recent moment in time when it was not nice. Perhaps it is too nice since it is abnormally warm, or sunny after a week of clouds. Or sunny in the early evening after a rainy morning. We could track those kinds of patterns. However, mapping it onto the taxi data presents special challenges.\nThat is, the distinct variability from day-to-day of taxi usage, even limiting ourselves to rush hour on weekdays, means we cannot chain multi-day patterns as in the distinctions above.\nSo we invented a workaround and wanted to see how it would help. To wit, we compared hourly trip counts on a given day to the same hour on the same day of the week the previous week. Additionally, we compared weather data to the same hour of the previous day. Our hope was that this would capture some of the compressed sense of ‚Äúnice‚Äù as opposed to ‚Äúunnice‚Äù with a comparison to a similar day for ridership. Perhaps we would see a similar effect as above.\nWe also decided to stick to analyzing temperature alone, given time considerations.\n\n\nCode\ndf |&gt;\n  ggplot(aes(temperature_change_since_prev_day, trip_count_change_since_prev_week, fill=temperature)) +\n  geom_point(alpha=.15, size=3, stroke=0, shape=21 ) +\n  scale_fill_distiller(palette=\"GnBu\", direction=-1) +\n  scale_y_continuous(labels=thousands) +\n  labs(\n    title = \"Change in Hourly Trip Count by Change in Temperature\",\n    x = paste(\"Change in \", temp_label, \"Since 24 Hours Ago\"),\n    y = \"Change in Trips Since a Week Ago\",\n    fill = paste(\"‚ÄúCurrent‚Äù\", temp_label)\n  ) \n\n\n\n\n\n\n\n\n\nThe distribution here suggests that trips don‚Äôt change much when the temperature also does not change much. If we squint, we imagine more dots in the II quadrant (negative \\(x\\), positive \\(y\\)), which confirms our idea that people ride less when it is nicer out. But maybe it is our imagination.\n\n\nCode\ndf |&gt; \n  mutate(\n    Quadrant = case_when(\n      temperature_change_since_prev_day &gt; 0 & trip_count_change_since_prev_week &gt; 0 ~ \"Got Warmer & More Trips (I)\",\n      temperature_change_since_prev_day &gt; 0 & trip_count_change_since_prev_week &lt; 0 ~ \"Got Warmer & Fewer Trips (IV)\",\n      temperature_change_since_prev_day &lt; 0 & trip_count_change_since_prev_week &gt; 0 ~ \"Got Cooler & More Trips (II)\",\n      temperature_change_since_prev_day &lt; 0 & trip_count_change_since_prev_week &lt; 0 ~ \"Got Cooler  & Fewer Trips (III)\"\n    )\n  ) |&gt;\n  count(Quadrant) |&gt;\n  arrange(desc(n))\n\n\n# A tibble: 5 √ó 2\n  Quadrant                            n\n  &lt;chr&gt;                           &lt;int&gt;\n1 Got Warmer & Fewer Trips (IV)     980\n2 Got Warmer & More Trips (I)       959\n3 Got Cooler & More Trips (II)      953\n4 Got Cooler  & Fewer Trips (III)   717\n5 &lt;NA&gt;                              237\n\n\nThere is not much of an effect here, and, what‚Äôs more, as we saw above, ‚Äúgetting warmer‚Äù only works until the temperature hits a threshold where it is too hot to walk. Even if we limit ourselves to the band of 17-21¬∞, however, we can still see that the I quadrant is most populated.\n\n\nCode\ndf |&gt; \n  filter(temperature &gt; 17 & temperature &lt; 21) |&gt;\n  mutate(\n    Quadrant = case_when(\n      temperature_change_since_prev_day &gt; 0 & trip_count_change_since_prev_week &gt; 0 ~ \"Got Warmer & More Trips (I)\",\n      temperature_change_since_prev_day &gt; 0 & trip_count_change_since_prev_week &lt; 0 ~ \"Got Warmer & Fewer Trips (IV)\",\n      temperature_change_since_prev_day &lt; 0 & trip_count_change_since_prev_week &gt; 0 ~ \"Got Cooler & More Trips (II)\",\n      temperature_change_since_prev_day &lt; 0 & trip_count_change_since_prev_week &lt; 0 ~ \"Got Cooler  & Fewer Trips (III)\"\n    )\n  ) |&gt;\n  drop_na(Quadrant) |&gt;\n  count(Quadrant) |&gt;\n  arrange(desc(n))\n\n\n# A tibble: 4 √ó 2\n  Quadrant                            n\n  &lt;chr&gt;                           &lt;int&gt;\n1 Got Warmer & Fewer Trips (IV)     139\n2 Got Cooler  & Fewer Trips (III)   131\n3 Got Warmer & More Trips (I)       130\n4 Got Cooler & More Trips (II)       99\n\n\nOur efforts to relativize probably require more finesse, but it did inspire us to craft the interactive visualization in the next chapter.\n\n\nCode\ndf |&gt;\n# pivot_trip_distance_df |&gt;\n  # select(month, trip_count, trip_type, trip_type_count, temperature, temperature_change_since_prev_day) |&gt;\n  select(month, trip_count, temperature, temperature_change_since_prev_day) |&gt;\n  mutate(temperature = round(temperature)) |&gt;\n  mutate(temperature_change_since_prev_day = round(temperature_change_since_prev_day)) |&gt;\n  write_csv(\"data-for-d3.csv\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#patterns-across-hours-days-and-seasons",
    "href": "results.html#patterns-across-hours-days-and-seasons",
    "title": "3¬† Results",
    "section": "3.6 Patterns across Hours, Days, and Seasons",
    "text": "3.6 Patterns across Hours, Days, and Seasons\nIn order to determine variations in taxi usage, we needed to establish a baseline ‚Äúnormal‚Äù in order to verify fluctuations in the data. How can we infer an abberration if we don‚Äôt know what normal is? How does cab usage regularly fluctate across the week according to work-life patterns, and how does it fluctuate by season?\n\n\n\n\n[1] E. Shapiro, ‚ÄúNew York City Public Schools to Close to Slow Spread of Coronavirus,‚Äù The New York Times: New York, Mar. 15, 2020. Accessed: Dec. 08, 2024. [Online]. Available: https://www.nytimes.com/2020/03/15/nyregion/nyc-schools-closed.html\n\n\n[2] New York State Department of Health, ‚ÄúPositive Tests Over Time, by Region and County.‚Äù Accessed: Dec. 08, 2024. [Online]. Available: https://coronavirus.health.ny.gov/positive-tests-over-time-region-and-county\n\n\n[3] I. Lunden, ‚ÄúJuno shuts down its operations in NYC as owner Gett signs strategic partnership with Lyft.‚Äù Accessed: Nov. 27, 2024. [Online]. Available: https://techcrunch.com/2019/11/18/juno-shuts-down-its-operations-in-nyc-as-owner-gett-signs-strategic-partnership-with-lyft/\n\n\n[4] J. Fingas, ‚ÄúVia‚Äôs personal ride-hailing will shut down next week.‚Äù Accessed: Nov. 27, 2024. [Online]. Available: https://www.engadget.com/via-ride-hailing-service-shutdown-231321466.html",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4¬† Interactive graph",
    "section": "",
    "text": "In this section, we carry over our efforts to relativize the relationship between changes in temperature from 24 hours earlier and changes in taxi ridership from a week ago. Instead of presenting all of the data at once, however, we let the user target a specific temperature and see how ridership differs when the previous day was warmer or colder and by how much. The farther right along the \\(x\\) axis, the warmer ‚Äútoday‚Äù was than ‚Äúyesterday.‚Äù The farther up the \\(y\\) axis, the more taxi trips taken ‚Äútoday‚Äù compared to ‚Äúlast week.‚Äù\nWe have limited ourselves, as in the previous section, to post-Pandemic, rush hour traffic when the temperature was -5¬∞-30¬∞.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "[1] J.\nFingas, ‚ÄúVia‚Äôs personal ride-hailing will shut down next\nweek.‚Äù Accessed: Nov. 27, 2024. [Online]. Available: https://www.engadget.com/via-ride-hailing-service-shutdown-231321466.html\n\n\n[2] I.\nLunden, ‚ÄúJuno shuts down its operations in NYC as\nowner Gett signs strategic partnership with\nLyft.‚Äù Accessed: Nov. 27, 2024. [Online]. Available:\nhttps://techcrunch.com/2019/11/18/juno-shuts-down-its-operations-in-nyc-as-owner-gett-signs-strategic-partnership-with-lyft/\n\n\n[3] New\nYork State Department of Health, ‚ÄúPositive Tests Over\nTime, by Region and County.‚Äù\nAccessed: Dec. 08, 2024. [Online]. Available: https://coronavirus.health.ny.gov/positive-tests-over-time-region-and-county\n\n\n[4] E.\nShapiro, ‚ÄúNew York City Public Schools to\nClose to Slow Spread of\nCoronavirus,‚Äù The New York Times: New York,\nMar. 15, 2020. Accessed: Dec. 08, 2024. [Online]. Available: https://www.nytimes.com/2020/03/15/nyregion/nyc-schools-closed.html",
    "crumbs": [
      "References"
    ]
  }
]