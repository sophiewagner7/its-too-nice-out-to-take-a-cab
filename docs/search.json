[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "‚ÄúIt‚Äôs Too Nice Out to Take a Cab‚Äù: Weather and Taxi Usage in New York, 2019‚Äì2024",
    "section": "",
    "text": "1 Introduction\nDo you ever wonder how weather influences our everyday choices? In a city like New York, even simple behavioral changes can have macro-level ripple effects. This is what we set out to explore‚Äîstarting with taxi data.\nAt first, Moacir was interested in seeing if there is a relationship between ‚Äúunseasonably‚Äù warm weather and New York and drought-like conditions, but Sophie suggested taking it in a different direction: what if we crossed this data with some human behavior, like taxi usage? What might this look like? After a bit of discussion, we landed on a fun hypothesis: people use cabs less often when it is ‚Äúnice‚Äù out in Manhattan ‚Äì they would rather walk than hail an expensive cab.\nProving this turned out to be tricky: what is even is ‚Äúnice‚Äù weather? Does it just mean sunny skies, or does it have a relationship to a temperature threshold? How might relative temperature come into play, such as an unusually warm day after a cold spell, impacting people‚Äôs inclination to walk? And does the effect wear off if there are multiple nice days in a row, as the novelty of walking gives way to taking cabs again? These questions struck us as more amusing and speculative, so we decided to pursue them, instead. Instead of proving the hypothesis, we are using taxi data to see if we can define what ‚Äúnice‚Äù weather is.\nIn short, our project aims to uncover how weather influences small, everyday decisions in urban life. Using taxi data provides a unique lens into how people adapt their transportation preferences due to the weather, serving as a microcosm for understanding human responses to environmental factors. In a city as dynamic as NYC, the answers could be particularly relevant and reveal fascinating insights about how we adapt to our surroundings.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#a-high-level-look-at-weather-and-taxi-trends-can-we-spot-a-pattern-from-here",
    "href": "index.html#a-high-level-look-at-weather-and-taxi-trends-can-we-spot-a-pattern-from-here",
    "title": "‚ÄúIt‚Äôs Too Nice Out to Take a Cab‚Äù: Weather and Taxi Usage in New York, 2019‚Äì2024",
    "section": "1.1 A High-Level Look at Weather and Taxi Trends: Can We Spot a Pattern from Here?",
    "text": "1.1 A High-Level Look at Weather and Taxi Trends: Can We Spot a Pattern from Here?\nLet‚Äôs take a quick peek at the data. Below we have weekly averages for daily taxi rides and temperature from January 2019 to June 2024.\n\n\nCode\ndf &lt;- read_parquet(\"data/complete_weather_and_taxi_data.parquet\")\n\ndouble_scale &lt;- function(x) {\n  ifelse(x &gt;= 1000, paste0(x / 1000, \"K\"), as.character(x))\n}\n\ndf |&gt; \n  group_by(date) |&gt; \n  summarize(\n    total_trips_day = sum(trip_count), .groups = \"drop\",\n    daily_temp = mean(temperature, na.rm = T)\n  )  |&gt; \n  mutate(week_start = floor_date(date, unit = \"week\")) |&gt; \n  group_by(week_start) |&gt; \n  summarize(\n    avg_trips_day = mean(total_trips_day),\n    avg_temp_day = mean(daily_temp), .groups = \"drop\"\n  ) |&gt; \n  pivot_longer(\n    cols=c(avg_trips_day, avg_temp_day), \n    names_to=\"avg_day_metric\", \n    values_to=\"avg_day_value\"\n  ) |&gt;\n  mutate(avg_day_metric=as.factor(avg_day_metric)) |&gt; \n  mutate(avg_day_metric=fct_recode(\n    avg_day_metric, \n    \"Average Daily Trips\"=\"avg_trips_day\", \n    \"Average Temperature (¬∞C)\"=\"avg_temp_day\")\n  ) |&gt; \n  mutate(avg_day_metric=fct_rev(avg_day_metric))  |&gt; \n  ggplot(aes(x = week_start, y = avg_day_value)) +\n    geom_point(color = secondary_color, size=0.5) +\n    geom_line(color = base_color) +\n    facet_wrap(~ avg_day_metric, scales = \"free_y\", ncol=1) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 year\") +\n  scale_y_continuous(labels=double_scale) +\n  labs(title = \"Average Daily Trips and Weekly Temperature, January 2019 ‚Äì June 2024\",\n       x = \"Date\",\n       y = \"\")\n\n\n\n\n\n\n\n\n\nCode\n   # theme(\n   #    axis.title.y = element_blank(),\n   #    axis.text.y = element_blank(),\n   # )\n\n\nüöï Considering the taxi data, the most notable observation is the dramatic drop in ridership in March 2020, coinciding with the beginning of the COVID-19 pandemic. While ridership has increased since, it has not nearly returned to pre-pandemic levels, reflecting increased work-from-home and other behavioral shifts. We can also observe seasonal fluctuations; for example, it appears that there are dips and peaks around January of each year, possibly tied to holiday travel patterns, weather, or other behavioral changes.\n‚õÖ Average weekly temperature follows predicted seasonal trends with peaks in the summer and dips in the winter. There may be a subtle trend of slightly higher average temperatures in more recent years, but nothing too definitive. Temperature alone provides a limited slice into what may distinguish a ‚Äúnice day.‚Äù In the next chapter, additional metrics like temperature change and weather categories (e.g.¬†cloud cover, rain) will be explored to refine the relationship between weather and ridership.\nFrom this broad view, it is really hard to see any clear relationship between ridership and weather. This is what makes our project so interesting‚Äìhow can we hammer out the data to unveil micro-patterns? We‚Äôll need to conduct a much more granular analysis to get to the bottom of things.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2¬† Data",
    "section": "",
    "text": "2.1 Description\nWe are basing our analysis on two datasets, a dataset of taxi use in New York and historical weather data. For both datasets, we initally planned to limit our analysis to 2019-02-01 00:00:00 ‚Äì 2024-06-25 23:00:00, in the interest of trying to catch about a year of pre-pandemic norms to help interpret pandemic and post-pandemic use of taxis. As noted in the next chapter, we had to abandon this scope. The inital upper bound reflects the extent of the weather data, and we initially planned on going back to January of 2019. However, no high-volume for-hire vehicle (FHVHV) data are available for January, so we bumped our limit to February, 2019.\nThe taxi data are provided by New York‚Äôs Taxi and Limousine Commission. They provide taxi data, in parquet format, going back to 2009. Since February of 2019, they have also included data on trips serviced by companies like Lyft and Uber, which are classified as ‚Äúhigh-volume for-hire vehicle‚Äù trips. The data are updated monthly, with a two-month lag. Our focus is on yellow taxi and FHVHV trips, because our focus is on intra-Manhattan trips. Only yellow cabs can pick up passengers in most of Manhattan, so we are ignoring green cabs and regular for-hire vehicles (town cars and limousines). Yellow cab data have 19 columns, and FHVHV data have 24 columns. With our Python scripts, we consolidate the data to create aggregated hourly statistics on trip duration and trip distance. We found the transaction data (fare amount and tip amount) noisy with unreliable outliers. It also fell outside of our scope of analysis. We also included time-delta statistics comparing a point in time with the same point in time a week earlier. We did this because taxi data follow weekly patterns.\nThe historical weather data are provided by the Global Historical Climate Network hourly (GHCNh), which provides hourly weather data going back over two centuries for New York City. The data come in annual parquet files for download by station. Our station, KNYC0, is listed in the GHCNh as USW00094728, and it is the weather station in Central Park. The data come in over 200 columns to account for the variability that can occur in the terse METAR report for airplanes, which is also included under remarks. The government provides a codebook to describe the remaining data. As we are interested in what conditions determine a ‚Äúnice‚Äù day for not using a taxi, we aimed to keep a wide array of data, including temperature, precipitation, wind, sky cover, humidity, and so on. We badly wanted to include snow data, but snow has been so infrequent during this window that we folded the snow numbers into the general precipitation numbers.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2¬† Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nThe taxi data are notoriously (as in, persistently) messy, registering trips outside the bounds of the time window and giving results that seem extremely unlikely, like large negative tips or negative trip durations. To counter these anomalies, we are limiting ourselves to trips between one minute and two hours long as well as trips of ten or fewer miles. Similarly, and, when consolidating monthly data to yearly data, we filter out all results from other years. In the aggregate, however, the outliers generally wash out, as we have a record of over 500 million yellow cab and Uber/Lyft rides. Nevertheless, there is one data point where no trips are recorded: 2:00am on March 10, 2019. However, there are data on both sides, so we will interpolate results for this time. Who knows what happened to the taxi system that affected both Uber and yellow taxis. Additionally, the tip amounts for Uber/Lyft are almost certainly incorrect, as over 75% of rides report no tip at all. As such, we will drop the tip and fare amounts from our data to account for this. We had suspected that a higher tip percentage might be related to a nice day, even though we assume taxi usage is lower, but the data are simply unreliable.\nFor weather, we have a large array of missing values, but the remarks column is missing only 36 entries, for a general station uptime of 99.93%. Many of the columns have many more missing values, but that is because the way the weather data work is by reporting a NaN for the absence of data. That said, we have a consecutive period of 24 hours‚Äô worth of missing data across May 31, 2023 to June 1, 2023. This includes missing remarks, suggesting the station was down. In our imagination, a peregrine falcon ate the station.\nThe other 12 missing remarks are scattered across the dataset.\nBecause we have a total of 47,328 points in time in our dataset, it is hard to see any of the missing data in any plot that includes the entire stretch.\n\n\nCode\nlibrary(ggplot2)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(tidyr)\ndf &lt;- read_parquet(\"data/complete_weather_and_taxi_data.parquet\")\n\nheatmap_data &lt;- df |&gt;\n    mutate(week_start=lubridate::floor_date(date, unit=\"week\"),\n        week = lubridate::week(date),\n        year = lubridate::year(date)) |&gt;\n    group_by(year, week) |&gt;\n    summarize(n_missing=sum(is.na(temperature)))\n\nggplot(heatmap_data, aes(x = week, y = year, fill = n_missing)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"white\", high = \"red\", name = \"Missing Count\") +\n  scale_x_continuous(breaks = seq(1, 52, by = 4)) + \n  scale_y_continuous(breaks = seq(2019, 2024, by=1))+\n  labs(\n    title = \"Number of Missing Temperature Observations by Date\",\n    x = \"Week of Year\",\n    y = \"Year\"\n  ) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nAs we can see in this chart, the missing temperature data (our most important metric, we suspect) are mostly centered in that 24-hour period when the station recorded no data. The other gaps are scattered across the data, with a tilt toward the older data. This is why we are confident in simply interpolating data for the missing values. Another option is to derive the temperature from the point in time‚Äôs METAR report, but we suspect the METAR reports for the missing data may be unparseable, in general.\n\n\nCode\nlibrary(redav)\ndf |&gt;\n  select(-c(juno, via)) |&gt;\n  plot_missing(percent=FALSE, max_rows=10, max_cols=10, num_char=6)\n\n\n\n\n\n\n\n\n\nOur second chart shows the distribution of missing data, from which we can see how infrequently a wind speed is registered and that the rest of the missing data are scattered in small numbers around the dataset, with almost all of the data making up complete cases (minus the above extracted columns).",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3¬† Results",
    "section": "",
    "text": "3.1 Dealing with the Pandemic\nOur intial plan was to contain data from 2019 to get a sense of a pre-COVID-19 Pandemic baseline against which we could compare our post-Pandemic data.\nCode\ndf |&gt;\n  mutate(year_month = lubridate::ymd(paste(year, month, \"01\", sep = \"-\"))) |&gt;\n  pivot_longer(cols=c(\n    \"juno\", \"lyft\", \"uber\", \"via\", \"yellow\"\n    ), names_to=\"car_company\", values_to=\"car_company_trips\")  |&gt;\n  mutate(car_company = factor(car_company, levels = c(\"juno\", \"via\", \"lyft\", \"uber\", \"yellow\"))) |&gt;\n  group_by(year_month, car_company) |&gt;\n  summarize(trips_per_month = sum(car_company_trips), .groups = \"drop\") |&gt;\n  ggplot(aes(\n    x=year_month, \n    y=trips_per_month, \n    fill=car_company\n    )) +\n    geom_bar(stat = \"identity\", position = \"stack\") +\n      labs(\n    title = \"Trips per Month by Hired Car Company/Type\",\n    x = \"Month\",\n    y = \"Total Trips\",\n    fill = \"Hired Car Company/Type\"\n  ) +\n  scale_fill_brewer(\n    palette = \"Set2\",\n    labels = c(\n      \"yellow\" = \"Yellow Cab\",\n      \"juno\" = \"Juno\",\n      \"lyft\" = \"Lyft\",\n      \"via\" = \"Via\",\n      \"uber\" = \"Uber\"\n      )\n  ) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"3 months\") +\n  scale_y_continuous(labels = millions) + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"bottom\")\nThree details jump out from an initial look at managing the Pandemic. First, we can see when the Pandemic hit in March, 2020. New York City schools closed on March 16, as cases went from a seven-day average of 0 per 100,000 inhabitants at the start of March to an initial peak of about 60 at the end of the month.[1] [2] The uncertainty over this initial wave halved the March ridership totals in comparison to February. Next, we can see that two of the FHVHV companies, though only holding small portions of the market, disappeared from the picture. Juno shut down operations in November 2019, with drivers being offered to join Lyft.[3] Via also stopped its ride-sharing operations in December 2021.[4] The cessation of rides from these two companies only lead us toward the most striking aspect of hired car and taxi usage in Manhattan. Not only did usage fall during the pandemic, but we seem to be in a new normal, averaging about 7.5 million rides a month across yellow cabs, Lyft, and Uber. These numbers have held since October 2021, suggesting it may make sense to abandon all data from before this time in order to get a good rhythm of usage.\nCode\nfirst_color &lt;- brewer.pal(8, \"Set2\")[1]\n\ndf |&gt;\n  mutate(year_month = as.Date(format(date, \"%Y-%m-01\"))) |&gt;\n  group_by(year_month) |&gt;\n  summarize(\n    monthly_trips = sum(trip_count),\n    monthly_half_mile = sum(half_mile_trips),\n    monthly_one_mile = sum(one_mile_trips),\n    monthly_two_mile = sum(two_mile_trips),\n    monthly_three_mile = sum(three_mile_trips),\n    monthly_five_mile = sum(five_mile_trips),\n    monthly_more_than_five = monthly_trips - monthly_half_mile - monthly_one_mile - monthly_two_mile - monthly_three_mile - monthly_five_mile,\n    pct_half_mile = monthly_half_mile / monthly_trips,\n    pct_one_mile = monthly_one_mile / monthly_trips,\n    pct_two_mile = monthly_two_mile / monthly_trips,\n    pct_three_mile = monthly_three_mile / monthly_trips,\n    pct_five_mile = monthly_five_mile / monthly_trips,\n    pct_more_than_five = monthly_more_than_five / monthly_trips,\n    .groups = \"drop\"\n  ) |&gt;\n  pivot_longer(\n    cols = c(\n    \"pct_half_mile\",\n    \"pct_one_mile\",\n    \"pct_two_mile\",\n    \"pct_three_mile\",\n    \"pct_five_mile\",\n    \"pct_more_than_five\",\n    ),\n    names_to = \"pct_trip_distance_group\",\n    values_to = \"pct_trip_distance_count\"\n  ) |&gt;\n  mutate(pct_trip_distance_group = factor(\n    pct_trip_distance_group, levels = c(\n      \"pct_half_mile\",\n      \"pct_one_mile\",\n      \"pct_two_mile\",\n      \"pct_three_mile\",\n      \"pct_five_mile\",\n      \"pct_more_than_five\"\n    ))) |&gt;\n  ggplot(aes(\n    x=year_month,\n    y= pct_trip_distance_count,\n    fill = pct_trip_distance_group\n    )) +\n    geom_bar(stat=\"identity\", position=\"stack\") +\n    labs(\n      title = \"Distribution of Taxi and Uber/Lyft Trip Distances under Ten Miles in Manhattan\",\n      x = \"Month\",\n      y = \"Percentage of Trips\",\n      fill = \"Trip Distance\"\n  ) +\n  scale_x_date(date_labels = \"%b %Y\", date_breaks = \"3 months\") +\n  scale_fill_brewer(\n    palette = \"GnBu\",\n    labels = c(\n      \"pct_more_than_five\" = \"Five to Ten Miles\",\n      \"pct_five_mile\" = \"Three to Five Miles\",\n      \"pct_three_mile\" = \"Two to Three Miles\",\n      \"pct_two_mile\" = \"One to Two Miles\",\n      \"pct_one_mile\" = \"Half Mile to One Miles\",\n      \"pct_half_mile\" = \"Under Half a Mile\"\n    )\n  ) +\n  scale_y_continuous(labels = label_percent()) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"bottom\")\nIn addition to using hired cars less often after the Pandemic, perhaps as a consequence of less business-related travel because of flexible work schedules, we see a second behavioral change in the post-Pandemic era, even if it is slight: for the class of trips we are observing, they run longer. Trips of one mile make up a smaller percentage of the total, while trips of more than three miles make up a larger percentage of the total since the onset of the Pandemic.\nBoth analyses suggest certainly abandoning pre-Pandemic data as well as all of the 2020 data. While the shift in typical distances smooths out already at the beginning of 2021, the number of trips does not reach its new normal until around October 2021, suggesting that is the true step into the post-Pandemic order.\nMoving forward, we will focus only on data from October 2021 onward, then.\nCode\n# Filter out pre- and during-Pandemic data.\ndf &lt;- df |&gt;\n  filter(df$date &gt;= as.Date(\"2021-10-01\"))",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#patterns-in-taxi-data",
    "href": "results.html#patterns-in-taxi-data",
    "title": "3¬† Results",
    "section": "3.2 Patterns in Taxi Data",
    "text": "3.2 Patterns in Taxi Data\nThe goal of our analysis is to see trends in rider usage in relationship with changes in the weather. In order to make claims about these relationships, we need to limit other components that may influence taxi ridership. Therefore, we explored variations in taxi usage based on hour of the day, day of the week, and month of the year. For instance, comparing ridership at 3 AM on a Wednesday to 5 PM on a Thursday would be misleading since baseline usage at these times differs inherently. Establishing a consistent baseline for ‚Äúnormal‚Äù taxi ridership allows for more meaningful comparisons and insights. But to establish a baseline, we also just need to see what the patterns even are in the data. In the following section we look at hourly, day of the week, and monthly/seasonal trends.\n\n3.2.1 Hourly patterns\nAn interesting result of our analysis is that trip distance did not appear to have any relationship with day of the week or month of the year. However, it did have some variation by time of day.\n\n\nCode\ndf |&gt;\n  group_by(hour) |&gt;\n  summarize(\n    monthly_trips = sum(trip_count),\n    monthly_half_mile = sum(half_mile_trips),\n    monthly_one_mile = sum(one_mile_trips),\n    monthly_two_mile = sum(two_mile_trips),\n    monthly_three_mile = sum(three_mile_trips),\n    monthly_five_mile = sum(five_mile_trips),\n    monthly_more_than_five = monthly_trips - monthly_half_mile - monthly_one_mile - monthly_two_mile - monthly_three_mile - monthly_five_mile,\n    pct_half_mile = monthly_half_mile / monthly_trips,\n    pct_one_mile = monthly_one_mile / monthly_trips,\n    pct_two_mile = monthly_two_mile / monthly_trips,\n    pct_three_mile = monthly_three_mile / monthly_trips,\n    pct_five_mile = monthly_five_mile / monthly_trips,\n    pct_more_than_five = monthly_more_than_five / monthly_trips,\n    .groups = \"drop\"\n  ) |&gt;\n  pivot_longer(\n    cols = c(\n    \"pct_half_mile\",\n    \"pct_one_mile\",\n    \"pct_two_mile\",\n    \"pct_three_mile\",\n    \"pct_five_mile\",\n    \"pct_more_than_five\",\n    ),\n    names_to = \"pct_trip_distance_group\",\n    values_to = \"pct_trip_distance_count\"\n  ) |&gt;\n  mutate(pct_trip_distance_group = factor(\n    pct_trip_distance_group, levels = c(\n      \"pct_more_than_five\",\n      \"pct_five_mile\",\n      \"pct_three_mile\",\n      \"pct_two_mile\",\n      \"pct_one_mile\",\n      \"pct_half_mile\"\n    ))) |&gt;\n  ggplot(aes(\n    x=hour,\n    y= pct_trip_distance_count,\n    fill = pct_trip_distance_group\n    )) +\n    geom_bar(stat=\"identity\", position=\"stack\") +\n    labs(\n      title = \"Distribution of Taxi and Uber/Lyft Trip Distances under Ten Miles \\nby Hour of Day\",\n      x = \"Hour\",\n      y = \"Percentage of Trips\",\n      fill = \"Trip Distance\"\n  ) +\n  scale_fill_brewer(\n    palette = \"GnBu\",\n    labels = c(\n      \"pct_more_than_five\" = \"Five to Ten Miles\",\n      \"pct_five_mile\" = \"Three to Five Miles\",\n      \"pct_three_mile\" = \"Two to Three Miles\",\n      \"pct_two_mile\" = \"One to Two Miles\",\n      \"pct_one_mile\" = \"Half Mile to One Miles\",\n      \"pct_half_mile\" = \"Under Half a Mile\"\n    )\n  ) +\n  scale_y_continuous(labels = label_percent()) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\nRider behavior does seem to be influenced by time of day. From the plot above we can see that longer trups are more common during the late-night and early-morning hours. Perhaps this indicates that people travel greater distances for late-night activities. The distribution of trip distances appears to stabilize between 7am and 7pm, with higher proportion of shorter-distance trips compared to long. Interestingly, time of day was the only time-measure that seemed to impact this aspect of rider behavior: day of the week and month do not appear to have any influence on trip distance. This information isn‚Äôt totally revolutionary, though it may underscore the importance of focusing on particular hours to account for variability in trip length or usage patterns.\n\n\n3.2.2 Variations in ridership: rush hour analysis\nWith respect to trip volume, there is a significant variation by time of day as anticipated. When plotting all dates, we noticed some clustering in trip counts by hour, and were able to decipher that this behavior is largely related to the day of the week.\n\n\nCode\ntemp_df &lt;- df |&gt; \n  mutate(\n    day = weekdays(date), \n    is_weekend = factor(ifelse(day %in% c(\"Saturday\", \"Sunday\"), \"Weekend\", \"Weekday\"),\n                        levels = c(\"Weekend\", \"Weekday\")),\n    day = factor(day, levels = c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")) \n  ) |&gt; \n  group_by(day, hour, is_weekend) |&gt; \n  summarize(mean_trip_count = mean(trip_count, na.rm = TRUE), .groups = \"drop\")\ntemp_df |&gt; \n  ggplot(aes(x = hour, y = mean_trip_count, group = day, color = is_weekend)) +\n  geom_line(linewidth = 1) +\n  geom_text_repel(\n    data = temp_df|&gt; filter(hour == max(hour)), \n    aes(label = day),\n    nudge_x = 1,\n    size = 3,\n    fontface=\"bold\"\n  ) +\n  scale_color_manual(\n    values = c(\"Weekend\" = base_color, \"Weekday\" = secondary_color),\n    labels = c(\"Weekend\", \"Weekday\"),\n    name = \"Day Type\"\n  ) +\n  scale_x_continuous(breaks = seq(0, 23, by = 3)) +\n  labs(\n    title = \"Trip Counts by Hour with Day of Week Labels\",\n    x = \"Hour of the Day\",\n    y = \"Average Trip Count\",\n    color = \"Day Type\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\nAfter identifying clusters in ridership patterns, we were able to delineate that a major source of variation in rider usage of hours of the day came from if it was a weekday or weekend. It appears that weekdays follow a somewhat similar trend by hour, with weekends exhibiting more unique trends. Saturday and Sunday show similar ridership in the morning (relatively high, carryover ridership from people going out late the previous night). However, Sunday has noticeably lower ridership in the evening; logically this makes sense as people are likely not engaging in as much nighttime activity before the workweek begins again. Because these patterns are distinct from one another and differ from the work-week trends, it will likely be better to stick to weekdays moving forward where the pattern is more consistent.\nLooking at weekdays,we notice strong bimodality during rush hour periods (7am-9am, 5pm-7pm). Perhaps we should limit our focus to just rush hour during working days to limit some variability or influence of time on taxi usage. Logically we might frame it as taking a taxi to and from work, but if its a nice day, I might decide to walk home from the office. If it‚Äôs below freezing, I am not going to go out of my way to walk 40 minutes home, though!\nConclusion: Moving forward, we‚Äôll restrict the analysis to non-holiday weekday rush hour periods (7-9 AM and 5-7 PM) to reduce variability and emphasize patterns tied to commuting behavior.\n\n\nCode\n# Filtering to working days and rush hour only\nall_dates &lt;- seq.Date(as.Date(\"2021-10-01\"), as.Date(\"2024-12-31\"), by = \"day\")\nus_holidays &lt;- as.Date(holidayNYSE(c(2021:2024)))\n\nget_columbus_day &lt;- function(year) {\n  october_dates &lt;- seq.Date(as.Date(paste(year, \"10-01\", sep = \"-\")), as.Date(paste(year, \"10-31\", sep = \"-\")), by = \"day\")\n  mondays &lt;- october_dates[weekdays(october_dates) == \"Monday\"]\n  mondays[2]\n}\nget_black_friday &lt;- function(year) {\n  november_dates &lt;- seq.Date(as.Date(paste(year, \"11-01\", sep = \"-\")), as.Date(paste(year, \"11-30\", sep = \"-\")), by = \"day\")\n  thursdays &lt;- november_dates[weekdays(november_dates) == \"Thursday\"]\n  thanksgiving &lt;- thursdays[4] \n  thanksgiving + 1 \n}\nchristmaseve_to_new_years &lt;- as.Date(unlist(lapply(2021:2024, function(year) {\n  seq.Date(as.Date(paste(year, \"12-24\", sep = \"-\")), as.Date(paste(year, \"12-31\", sep = \"-\")), by = \"day\")\n})))\n\ncolumbus_days &lt;- as.Date(sapply(2021:2024, get_columbus_day))\nblack_fridays &lt;- as.Date(sapply(2021:2024, get_black_friday))\n\nworking_days &lt;- all_dates[\n  !weekdays(all_dates) %in% c(\"Saturday\", \"Sunday\") & \n  !(all_dates %in% us_holidays) & \n  !(all_dates %in% columbus_days) & \n  !(all_dates %in% black_fridays) & \n  !(all_dates %in% christmaseve_to_new_years) & \n  (format(as.Date(all_dates), \"%m-%d\") != \"11-11\")\n]\n\ndf$working_day &lt;- ifelse(df$date %in% working_days, T, F)\ndf$rush_hour &lt;- ifelse(df$working_day==T & df$hour %in% c(7,8,9,17,18,19), T, F)\ndf &lt;- df |&gt; filter(rush_hour==T)\n\n\n\n\n3.2.3 Day of week and seasonal patterns\nNow that we are focused only on rush hour times, let‚Äôs take a look at any other day of the week and seasonal patterns.\n\n\nCode\np1 &lt;- ggplot(df |&gt;\n  mutate(day = factor(wday(date, label = TRUE, abbr = TRUE), levels = c(\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"))) |&gt;\n      filter(isWeekday(date)), aes(x = day, y = trip_count))+\n  geom_boxplot(fill=base_color, color = \"black\", outlier.color = \"black\", outlier.size = 1) +\n  labs(title = \"Trip Count by Day of Week\", x = \"Day of Week\", y = \"Trip Count\") +\n  theme_minimal() \n\n\np2 &lt;- ggplot(df,aes(x = month_abbr, y = trip_count)) +\n  geom_boxplot(fill=base_color, color = \"black\", outlier.color = \"black\", outlier.size = 1) +\n  labs(title = \"Trip Count by Month\", x = \"Month\", y = \"Trip Count\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\np1 + p2 +\n  plot_layout(axis_titles = \"collect\")\n\n\n\n\n\n\n\n\n\nEven within the weekday rush hour subset, ridership varies‚Ä¶ We see that Mondays have the lowest median trip counts and the most compact IQR. I tie this to the fact that Monday is a common WFH day (explaining lower average) and people tend to be consistent in their behavior at the start of the week (less variability). Tuesday through Thursday we see a pretty consistent median and variabilty. Friday we see the highest variability, likely because people engage in social activities after work. Tuesday through Thursday show relatively consistent median trip counts and narrower distributions, reflecting more regular commuting patterns. There are some outliers visible on the plot worth investigating, perhaps relating to around-holiday times, special events, or weather coniditions.\nLooking at the trend by month, we can see some seasonality. July and August have the edian trip counts and tighter distributions. From this we may be able to infer that there is reduced ridership during summer months, perhaps due to vacations, lighter commuting schedules, or more people deciding not to take a cab if it is nice out! January shows another low median, maybe indicating continued end-of-year holidays and vacations. February through June is fairly consistent in terms of median and IQR.\nEven within rush hour periods, external factors like days of the week and time of year still appear to have some influence on ridership. This is important to note because it will impact how we assess changes in ridership due to weather conditions later on.\n(Optional) Exploring morning and evening rush hour‚Ä¶\n\nperhaps morning vs evening rush Logic: Morning commuters may be more rigid about travel (e.g., office workers) compared to evening commuters (leisure or flexible activities).\n\n\n\nCode\ndf &lt;- df |&gt; mutate(\n rush_hour_group = case_when(\n    hour %in% c(7, 8, 9) ~ \"Morning rush hour (7-9am)\",\n    hour %in% c(17, 18, 19) ~ \"Evening rush hour (5-7pm)\",\n  ) |&gt; \n  factor(levels = c(\"Morning rush hour (7-9am)\", \"Evening rush hour (5-7pm)\"), ordered = TRUE)\n)\ndf |&gt;\n  mutate(day = factor(wday(date, label = TRUE, abbr = TRUE), levels = c(\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"))) |&gt;\n      filter(isWeekday(date)) |&gt; \n  ggplot(aes(x = day, y = trip_count, fill=rush_hour_group))+\n  geom_boxplot(color = \"black\", outlier.color = \"black\", outlier.size = 1) +\n  labs(title = \"Trip Count by Day of Week\", x = \"Day of Week\", y = \"Trip Count\", fill=\"Rush Hour Group\") +\n  scale_fill_manual(values=c(base_color, secondary_color)) +\n  theme_minimal()",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#patterns-in-weather-data",
    "href": "results.html#patterns-in-weather-data",
    "title": "3¬† Results",
    "section": "3.3 Patterns in Weather Data",
    "text": "3.3 Patterns in Weather Data\n\nWe chose to limit our weather analysis to three variables: temperature, cloud cover, and rain. This provides three kinds of variables (numeric, categorical, boolean) while also giving a sense of easy to understand information that might be used by a traveler electing to walk or not. That is, a consideration of whether it is sunny or not is perhaps clearer to a person choosing to ride the cab than the dew point.\n\n\nCode\ndf |&gt; \n  ggplot(aes(x = month_abbr, y = temperature)) +\n    geom_boxplot(fill=base_color) +\n    labs(\n      title = \"Temperature Distribution\",\n      x = \"Month\",\n      y = temp_label\n    ) \n\n\n\n\n\n\n\n\n\ndiscussion\nCloud cover is measured in ‚Äúoktas,‚Äù which we have converted to an ordinal categorical variable, that turns ‚Äúless cloudy‚Äù into a positive measure when comparing two different weather reports.\n\n\n\nValue\nDescription\n\n\n\n\n0\nClear\n\n\n-1\nFew clouds\n\n\n-2\nScattered clouds\n\n\n-3\nBroken clouds\n\n\n-4\nOvercast\n\n\n\n\n\nCode\ndf |&gt;\n  group_by(month_abbr, cloud_cover) |&gt;\n  tally() |&gt;\n  group_by(month_abbr) |&gt;\n  mutate(percentage = n / sum(n) * 100) |&gt;\n  ungroup() |&gt;\nggplot(aes(x = month_abbr, y = percentage, fill = as.factor(cloud_cover))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(\n    title = \"Percentage of Cloud Cover by Month\",\n    x = \"Month\",\n    y = \"Percentage\",\n    fill = \"Cloud Cover\"\n  ) +\n  scale_fill_brewer(\n    palette = \"GnBu\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nCloud cover less obviously seasonal than temperature, and in general days are clear. Likely won‚Äôt tell us much otoh makes cloudy days jump out.\n\n\nCode\ndf |&gt;\n  group_by(date = as.Date(date)) |&gt;\n  summarize(\n    rain_day = any(rain == TRUE),\n    across(c(year, month_abbr), ~ first(.))\n  ) |&gt;\n  group_by(year, month_abbr) |&gt;\n  summarize(\n    rainy_days = sum(rain_day), .groups = \"drop\",\n  ) |&gt;\n  group_by(month_abbr) |&gt;\n  summarize(avg_rainy_days = mean(rainy_days)) |&gt;\n  ggplot(aes(x = month_abbr, y = avg_rainy_days)) +\n  geom_bar(stat = \"identity\", fill = base_color) +\n  labs(\n    title = \"Average Number of Days with at Least Trace Amounts of Rain\",\n    x = \"Month\",\n    y = \"Average Rainy Days\"\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#weather-vs.-trips-can-we-define-nice-weather-by-looking-at-ridership-patterns",
    "href": "results.html#weather-vs.-trips-can-we-define-nice-weather-by-looking-at-ridership-patterns",
    "title": "3¬† Results",
    "section": "3.4 Weather vs.¬†Trips: Can we define ‚Äúnice‚Äù weather by looking at ridership patterns?",
    "text": "3.4 Weather vs.¬†Trips: Can we define ‚Äúnice‚Äù weather by looking at ridership patterns?\n\nNow that we have refocused our attention to a smaller subset of the data, we can look at some initial relationships between the two central taxi variables (trip_count and the various distance bands) and the three weather variables, (temperature, cloud_cover, and rain).\n\n\nCode\npivot_trip_distance_df &lt;- df |&gt;\n  mutate(\n    temperature = round(temperature)\n  ) |&gt;\n  mutate(\n    up_to_ten_mile_trips = trip_count - rowSums(across(ends_with(\"mile_trips\")))\n  ) |&gt;\n  pivot_longer(\n    cols=c(ends_with(\"mile_trips\")),\n    names_to=\"trip_type\",\n    values_to=\"trip_type_count\",\n  ) |&gt;\n  mutate(trip_type = factor(trip_type, \n    levels = c(\n      \"half_mile_trips\", \n      \"one_mile_trips\", \n      \"two_mile_trips\", \n      \"three_mile_trips\", \n      \"five_mile_trips\", \n      \"up_to_ten_mile_trips\"\n      ),\n    labels = c(\n      \"Up to Half-Mile Trips\",\n      \"Up to One-Mile Trips\",\n      \"Up to Two-Mile Trips\",\n      \"Up to Three-Mile Trips\",\n      \"Up to Five-Mile Trips\",\n      \"Up to Ten-Mile Trips\"\n    ),\n    ordered = TRUE)) \n\npivot_trip_distance_df |&gt;\n  group_by(trip_type, temperature) |&gt;\n  summarize(\n    avg_trips_by_degree=mean(trip_type_count),\n    .groups = \"drop\"\n  ) |&gt;\n  ggplot(aes(temperature, avg_trips_by_degree)) +\n    geom_point(color=base_color, size=1, alpha=0.5) +\n    scale_y_continuous(\n      labels = thousands,\n      breaks = pretty_breaks(n = 3)\n    ) +\n    geom_smooth(color=secondary_color, method=\"loess\", linewidth=1, se=TRUE, alpha=0.15)+\n    # scale_fill_distiller(\n    #   palette = \"GnBu\"\n    # ) +\n    labs(\n      title = \"Average Hourly Trips Per Hour by Integral Temperature across Trip Distance\",\n      y = \"Average Hourly Trips\",\n      x = temp_label,\n      fill = \"Count\"\n    ) +\n  facet_wrap(~ trip_type, ncol = 3, nrow = 2, scales=\"free_y\")\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nCode\npivot_trip_distance_df |&gt;\n  group_by(trip_type, cloud_cover) |&gt; \n  summarize(\n    avg_trips = mean(trip_type_count, na.rm = TRUE),\n    se = sd(trip_type_count, na.rm = TRUE) / sqrt(n()),\n    .groups = \"drop\"\n  ) |&gt;\n  ggplot(aes(x = cloud_cover, y = avg_trips, fill = cloud_cover)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~trip_type, scales = \"free_y\") +\n  scale_y_continuous(label=comma)+\n  scale_fill_brewer(palette = \"GnBu\") +\n  labs(\n    title = \"Average Hourly Trips by Cloud Cover and Trip Distance\",\n    x = \"Cloud Cover\",\n    y = \"Average Hourly Trips\",\n    fill = \"Cloud Cover\"\n  )+\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"bottom\" \n ) \n\n\n\n\n\n\n\n\n\n\n\nCode\npivot_trip_distance_df |&gt;\n  group_by(trip_type, rain) |&gt; \n  summarize(\n    avg_trips = mean(trip_type_count, na.rm = TRUE),\n    se = sd(trip_type_count, na.rm = TRUE) / sqrt(n()),\n    .groups = \"drop\"\n  ) |&gt;\n  ggplot(aes(x = rain, y = avg_trips, fill = rain)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  # geom_errorbar(aes(ymin = avg_trips - se, ymax = avg_trips + se),\n  #               width = 0.2, position = position_dodge(0.9)) +\n  scale_y_continuous(label=comma)+\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(\n    title = \"Average Hourly Trips by Rain and Trip Distance\",\n    x = \"Rain\",\n    y = \"Average Hourly Trips\",\n    fill = \"Rain\"\n  )+\n  facet_wrap(~trip_type, scales = \"free_y\") +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"bottom\" \n ) \n\n\n\n\n\n\n\n\n\nThis is establishing the relationship. Standardize:\n( x - min ) / (max - min)\nweather: rain y/n , cloud cover categorical , temp numeric\ntrips: count, cat distance chunks\ntwo variable fights: - scatterplot - boxplot/cat vs num\n\n3.4.1 Count of trips\noriginal plot:\n\n\nCode\nggplot(df, aes(x = temperature, y = trip_count)) +\n  geom_point(alpha = 0.2, color = base_color) +\n  scale_y_continuous(\n      labels = thousands,\n      breaks = pretty_breaks(n = 3)\n    ) +\n  geom_smooth(method = \"loess\", se = T, color = base_color) +\n  labs(\n    title = \"Trip Count vs. Temperature\",\n    x = \"Temperature (¬∞C)\",\n    y = \"Trip Count\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShould plot above be replaced with this? Used your method of average by degree:\n\n\nCode\ndf |&gt;\n  mutate(temperature = round(temperature)) |&gt;\n  group_by(temperature) |&gt;\n  summarize(avg_trips_by_degree=mean(trip_count), .groups = \"drop\") |&gt;\n  ggplot(aes(x = temperature, y = avg_trips_by_degree)) +\n  geom_point(alpha = 0.9, color = base_color) +\n  geom_smooth(method = \"loess\", se = T, color = base_color, alpha=0.15) +\n  scale_y_continuous(labels = thousands, breaks = pretty_breaks(n = 3)) +\n  labs(title = \"Trip Count vs. Temperature\", x = \"Temperature (¬∞C)\", y = \"Trip Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nWe see a higher amount of variability in the lower temperatures. We see an increase in trip count at higher temps, specifically above 30* celsius. This may make sense. If it is hot out maybe I dont want to walk.\nOn the other hand it levels out in moderate temperatures\nold plot:\n\n\nCode\nggplot(df, aes(x = cloud_cover, y = trip_count)) +\n  geom_point(position=\"jitter\", alpha=0.3, color=base_color) +\n  geom_boxplot(alpha=0.1, fill=\"white\", outlier.alpha=1, outlier.color=\"black\", linewidth=0.55) +\n  labs(title = \"Trip Count by Cloud Cover\", x = \"Cloud Cover\", y = \"Trip Count\") +\n  scale_y_continuous(labels = thousands, breaks = pretty_breaks(n = 3)) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThe vast majority of days are either clear or overcast. This doesn‚Äôt really tell us much - those values are very similar, the middle plots could really just be explained by variability and smaller sample size. potensh remove ‚Äìunless we just want for due diligence.\nBelow I tried to redo this to line up with your color scheme but u cant see clear at all lol\n\n\nCode\nggplot(df, aes(x = cloud_cover, y = trip_count, color=cloud_cover)) +\n  geom_point(position=\"jitter\", alpha=0.5) +\n  geom_boxplot(alpha=0.1, fill=\"white\", outlier.alpha=1, color=\"black\", outlier.color=\"black\", linewidth=0.55) +\n  scale_color_brewer(palette = \"GnBu\") +\n  labs(title = \"Trip Count by Cloud Cover\", x = \"Cloud Cover\", y = \"Trip Count\") +\n  theme_minimal() +\n  theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(df, aes(x = trip_count, fill = rain)) +\n  geom_density(alpha = 0.7) +\n  scale_fill_manual(values = c(\"Not raining\" = \"grey\", \"Raining\" = \"cornflowerblue\")) +\n  labs(title = \"Density of trip count by Rain Status\", x = \"Number of trips in an hour\", y = \"Density\", fill = \"Rain Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThe plot above may suggest that there is greater ridership when it is raining. While the density curves largely overlap, suggesting some but not a substantial impact of rain on trip distribution, there are some things to take note of. First, the distribution of number of trips for ‚ÄúRaining‚Äù days (blue) appears to be slightly shifted towards higher trip counts compared to ‚ÄúNot raining‚Äù days (grey). This could indicate a slight increase in trip demand during rainy periods, potentially due to fewer people walking or biking. Moreover, we see more extreme values in the ‚ÄúRaining‚Äù distribution: the tail is slightly longer on the right side, suggests that more extreme trip counts (i.e.¬†higher demand) occurs more frequently during rain.\nPerhaps include: I made the plot below just to test again that idea of does rain impact evening rush hour more than morning rush hour. Below, we can see the evening rush hour (I need to reorder these still) has a slightly higher median AND IQR for raining vs not raining. Idk I think this is somewhat of note ‚Äì people are perhaps more flexible in the evening. I might not be planning to walk to work on any given day, but in the summer when it is nice out sometimes I spontaneously walk home from work instead of my usual transportation.\n\n\nCode\nggplot(df, aes(x = rush_hour_group, y = trip_count, fill = rain)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +\n  scale_fill_manual(values = c(\"Not raining\" = \"grey\", \"Raining\" = \"cornflowerblue\")) +\n  scale_y_continuous(labels = thousands, breaks = pretty_breaks(n = 3)) +\n  labs(title = \"Trip Count distribution by rain and rush_hour group\", x = \"\", y = \"Trip Count\", fill = \"Rain Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nPotentially illuminates that people are slightly more rigid in morning routines compared to evening routines.\nRain and cloud and temp together w/ ridership: what defines a ‚Äúnice‚Äù day? Where do we see the most and least ridership?",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#timeshifts",
    "href": "results.html#timeshifts",
    "title": "3¬† Results",
    "section": "3.5 Timeshifts",
    "text": "3.5 Timeshifts\n\n\n\nCode\npivot_trip_distance_df |&gt;\n  mutate(\n    temperature_change_since_prev_day = round(temperature_change_since_prev_day)\n  ) |&gt;\n  filter(\n    temperature &gt; 25,\n  ) |&gt;\n  # group_by(trip_type) |&gt;\n  ggplot(aes(temperature_change_since_prev_day, trip_count_change_since_prev_week)) +\n  geom_hex() +\n  scale_fill_viridis_c(direction=-1) +\n  # scale_fill_distiller(palette=\"GnBu\", direction=-1) +\n  labs(\n    title = \"Change in trip by change in temp\",\n    x = paste(\"Change in \", temp_label, \"Since 24 Hours Ago\"),\n    y = \"Change in Trips since a week ago\",\n    fill = \"trips\"\n  )#+\n\n\n\n\n\n\n\n\n\nCode\n  # facet_wrap(~trip_type, scales=\"free_y\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#comparing-different-times-to-gauge-behavior-change",
    "href": "results.html#comparing-different-times-to-gauge-behavior-change",
    "title": "3¬† Results",
    "section": "3.6 Comparing Different Times to Gauge Behavior Change",
    "text": "3.6 Comparing Different Times to Gauge Behavior Change\nThe patterns of taxi usage complicate how we can try to analyze weather effects. That is, the strong weekly cycle of increasing ridership as the week goes on contrasts with the relative sense of a ‚Äúnice‚Äù day. If we typically take a cab on Friday, but elect not to on a specific Friday because the weather is nice, we are not probably comparing that Friday‚Äôs weather to the previous Friday‚Äôs. Instead, we are likely comparing to yesterday‚Äôs weather or even this morning‚Äôs weather.\nThis means that while taxi ridership has to be compared against data from a week previous, weather data has to be compared against data from a day previous.\n\n3.6.1 last week vs.¬†yesterday\nChat piece about doing this weird choice.\n\n\n3.6.2 comparing yesterday to today and lastweek to today.\nprob for d3. start with r charts though to see wht seems salient.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#patterns-across-hours-days-and-seasons",
    "href": "results.html#patterns-across-hours-days-and-seasons",
    "title": "3¬† Results",
    "section": "3.7 Patterns across Hours, Days, and Seasons",
    "text": "3.7 Patterns across Hours, Days, and Seasons\nIn order to determine variations in taxi usage, we needed to establish a baseline ‚Äúnormal‚Äù in order to verify fluctuations in the data. How can we infer an abberration if we don‚Äôt know what normal is? How does cab usage regularly fluctate across the week according to work-life patterns, and how does it fluctuate by season?\n\n\n\n\n[1] E. Shapiro, ‚ÄúNew York City Public Schools to Close to Slow Spread of Coronavirus,‚Äù The New York Times: New York, Mar. 15, 2020. Accessed: Dec. 08, 2024. [Online]. Available: https://www.nytimes.com/2020/03/15/nyregion/nyc-schools-closed.html\n\n\n[2] New York State Department of Health, ‚ÄúPositive Tests Over Time, by Region and County.‚Äù Accessed: Dec. 08, 2024. [Online]. Available: https://coronavirus.health.ny.gov/positive-tests-over-time-region-and-county\n\n\n[3] I. Lunden, ‚ÄúJuno shuts down its operations in NYC as owner Gett signs strategic partnership with Lyft.‚Äù Accessed: Nov. 27, 2024. [Online]. Available: https://techcrunch.com/2019/11/18/juno-shuts-down-its-operations-in-nyc-as-owner-gett-signs-strategic-partnership-with-lyft/\n\n\n[4] J. Fingas, ‚ÄúVia‚Äôs personal ride-hailing will shut down next week.‚Äù Accessed: Nov. 27, 2024. [Online]. Available: https://www.engadget.com/via-ride-hailing-service-shutdown-231321466.html",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4¬† Interactive graph",
    "section": "",
    "text": "Code\ndf |&gt;\n# pivot_trip_distance_df |&gt;\n  # select(month, trip_count, trip_type, trip_type_count, temperature, temperature_change_since_prev_day) |&gt;\n  select(month, trip_count, temperature, temperature_change_since_prev_day) |&gt;\n  mutate(temperature = round(temperature)) |&gt;\n  mutate(temperature_change_since_prev_day = round(temperature_change_since_prev_day)) |&gt;\n  write_csv(\"data-for-d3.csv\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "[1] J.\nFingas, ‚ÄúVia‚Äôs personal ride-hailing will shut down next\nweek.‚Äù Accessed: Nov. 27, 2024. [Online]. Available: https://www.engadget.com/via-ride-hailing-service-shutdown-231321466.html\n\n\n[2] I.\nLunden, ‚ÄúJuno shuts down its operations in NYC as\nowner Gett signs strategic partnership with\nLyft.‚Äù Accessed: Nov. 27, 2024. [Online]. Available:\nhttps://techcrunch.com/2019/11/18/juno-shuts-down-its-operations-in-nyc-as-owner-gett-signs-strategic-partnership-with-lyft/\n\n\n[3] New\nYork State Department of Health, ‚ÄúPositive Tests Over\nTime, by Region and County.‚Äù\nAccessed: Dec. 08, 2024. [Online]. Available: https://coronavirus.health.ny.gov/positive-tests-over-time-region-and-county\n\n\n[4] E.\nShapiro, ‚ÄúNew York City Public Schools to\nClose to Slow Spread of\nCoronavirus,‚Äù The New York Times: New York,\nMar. 15, 2020. Accessed: Dec. 08, 2024. [Online]. Available: https://www.nytimes.com/2020/03/15/nyregion/nyc-schools-closed.html",
    "crumbs": [
      "References"
    ]
  }
]