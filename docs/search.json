[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "“It’s Too Nice Out to Take a Cab”: Weather and Taxi Usage in New York, 2019–2024",
    "section": "",
    "text": "1 Introduction\nAt first, Moacir was interested in seeing if there is a relationship between “unseasonably” warm weather and New York and drought like conditions, but Sophie suggested crossing in a dataset from a different domain and seeing what kinds of results could emerge. Instead of just looking at the weather, perhaps we can draw a relationship between human behavioral response to the weather. What might this look like? After a bit of discussion, we had a preliminary idea of testing the hypothesis that people use cabs less often when it is “nice” out in Manhattan. That is, they are more inclined to walk to their destination than hail an expensive cab.\nQuickly it was clear, however, that proving this hypothesis would require coming up with a definition of “nice,” so we flipped the project: we’re assuming as true that people are more inclined to walk when the weather is nice, so we are using the taxi data to see if we can define what “nice” weather is. Does it just mean sunny skies, or does it have a relationship to a temperature threshold? How might relative temperature come into play, such as an unusually warm day after a cold spell, impact people’s inclination to walk? And does the effect wear off if there are multiple nice days in a row, and the novelty of walking gives way to taking cabs again? These questions struck us as more amusing and speculative, so we decided to pursue them, instead.\nOverall, our project explores how weather influences the small, everyday decisions which collectively shape urban life. The unique spatial and temporal granularity of taxi data allows us to capture patterns of human mobility with precision. By doing so, we may observe behavioral shifts in response to weather changes in real time. Such a study not only provides a unique lens into how people adapt their transportation preferences due to the weather, but also serves as a microcosm for understanding human responses to environmental factors. Such insights are particularly relevant in a large, dynamic city like New York.\n\n\nCode\nlibrary(ggplot2)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(tidyr)\ndf &lt;- read_parquet(\"data/complete_weather_and_taxi_data.parquet\")\n\n\n\n\nCode\ndf_day &lt;- df |&gt; \n    group_by(date) |&gt; \n    summarize(total_trips_day = sum(trip_count)) |&gt; \n    select(date, total_trips_day)\ndf_day |&gt; \n    mutate(week_start=lubridate::floor_date(date, unit=\"week\")) |&gt;\n    group_by(week_start) |&gt;\n    summarize(avg_trips_day = mean(total_trips_day))|&gt;\n    ggplot(aes(x=week_start, y=avg_trips_day), color=\"cornflowerblue\") +\n        geom_point() +\n        geom_line() + \n        scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 year\") +\n        scale_y_continuous(labels = comma) +\n        labs(title=\"Average daily taxi trips per week, January 2019-December 2024\",\n             x = \"Date\", \n             y = \"Average number of trips in a day\") +\n        theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf_day &lt;- df |&gt; \n    filter(!is.na(temperature)) |&gt;\n    group_by(date) |&gt; \n    summarize(daily_temp = mean(temperature)) |&gt; \n    select(date, daily_temp)\ndf_day |&gt; \n    mutate(week_start=lubridate::floor_date(date, unit=\"week\")) |&gt;\n    group_by(week_start) |&gt;\n    summarize(avg_temp_day = mean(daily_temp)) |&gt;\n    ggplot(aes(x=week_start, y=avg_temp_day), color=\"salmon\") +\n        geom_point() +\n        geom_line() + \n        scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 year\") +\n        labs(title=\"Average weekly temp, January 2019-December 2024\",\n             x = \"Date\", \n             y = \"Tempurature\") +\n        theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nCode\n# print(df |&gt; filter(is.na(temperature)))\n# df |&gt; filter(is.na(temperature)) |&gt;\n#     mutate(week_start=lubridate::floor_date(date, unit=\"week\"))|&gt;\n#     group_by(week_start)|&gt;\n#     summarize(count_na=n()) |&gt;\n#     print(n=55)\n# df |&gt; filter(is.na(temperature)) |&gt;\n#     mutate(week_start=lubridate::floor_date(date, unit=\"week\"))|&gt;\n#     filter(week_start==as.Date(\"2019-04-14\")) |&gt;\n#     print(n=47)\n\n\n\n\nCode\nheatmap_data &lt;- df |&gt;\n    mutate(week_start=lubridate::floor_date(date, unit=\"week\"),\n        week = lubridate::week(date),\n        year = lubridate::year(date)) |&gt;\n    group_by(year, week) |&gt;\n    summarize(n_missing=sum(is.na(temperature)))\n\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n\nCode\nggplot(heatmap_data, aes(x = week, y = year, fill = n_missing)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"white\", high = \"red\", name = \"Missing Count\") +\n  scale_x_continuous(breaks = seq(1, 52, by = 4)) +  # Adjust x-axis ticks\n  labs(\n    title = \"Heatmap of Missing Data\",\n    x = \"Week\",\n    y = \"Year\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nWe are basing our analysis on two datasets, a dataset of taxi use in New York and historical weather data. For both datasets, we will limit our analysis to 2019–August 2024, in the interest of trying to catch about a year of pre-pandemic norms to help interpret pandemic and post-pandemic use of taxis.\nThe taxi data are provided by New York’s Taxi and Limousine Commission. They provide taxi data, in parquet format, going back to 2009. Since February of 2019 they have also included data on trips serviced by companies like Lyft and Uber, which are classified as “high-volume for-hire vehicle” (HVFHV) trips. The data are updated monthly, with a two-month lag; however, at the time of submission, only data through August 2024 were available. Our focus is on yellow taxi and HVFHV trips, because our focus is on intra-Manhattan trips. Only yellow cabs can pick up passengers in most of Manhattan, so we are ignoring green cabs and regular for-hire vehicles (town cars and limousines). Yellow cab data have 19 columns, of which the pertient columns for us are pickup/dropoff date and time (tpep_pickup_datetime/tpep_dropoff_datetime in a datetime format), the pickup/dropoff locations (PULocationID/DOLocationID in integer format, corresponding to NYC taxi zones) in order to filter on Manhattan-only trips, passenger count (Passenger_count in integer format), fare amount (Fare_amount in integer format), and tip amount (Tip_amount in integer format).\nThe historical weather data are provided by the Global Historical Climate Network hourly (GHCNh), which provides hourly weather data going back over two centuries for New York City. We will be limiting ourselves to 2019–present, which comes in annual parquet files for download by station. Our station, KNYC0, is listed in the GHCNh as USW00094728, and it is the weather station in Central Park. The data come in over 200 columns to account for the variability that can occur in the terse METAR report for airplanes, which is also included under remarks. The government provides a codebook. We may simply feed the reports to the python-metar library, which parses the reports for us. As we are interested in what conditions determine a “nice” day for not using a taxi, we want to keep as much data from the weather report as possible, including temperature, precipitation, sky cover, snow, humidity, and so on.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nDescribe any patterns you discover in missing values. If no values are missing, graphs should still be included showing that.\n(suggested: 2 graphs plus commentary)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  }
]